<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr.赵</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://GodPang.github.io/"/>
  <updated>2019-05-01T02:22:43.715Z</updated>
  <id>https://GodPang.github.io/</id>
  
  <author>
    <name>GodPang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTML</title>
    <link href="https://GodPang.github.io/2019/05/01/HTML/"/>
    <id>https://GodPang.github.io/2019/05/01/HTML/</id>
    <published>2019-05-01T02:11:47.000Z</published>
    <updated>2019-05-01T02:22:43.715Z</updated>
    
    <content type="html"><![CDATA[<p></p><h3>我挺可怜昨晚那个男生的，毕竟我曾经和他一样无助</h3><br><a id="more"></a><p></p><h1 id="一、HTML语言"><a href="#一、HTML语言" class="headerlink" title="一、HTML语言"></a>一、HTML语言</h1><h2 id="1、什么是HTML语言"><a href="#1、什么是HTML语言" class="headerlink" title="1、什么是HTML语言"></a>1、什么是HTML语言</h2><p>HTML（英文Hyper Text Markup Language的缩写）中文译为“超文本标签语言”，主要是通过HTML标签对网页中的文本、图片、声音等内容进行描述。</p><p>  标签：标记的意思，在日常生活中，我们也经常会见到一些标记，例如交通规则的标记，告诉你应该怎样走。</p><p>而这里的标签就是告诉浏览器，在网页上显示什么内容，例如图片，文字，视频等。</p><p>文本：文字，那么什么是”超文本“，不仅可以显示文字，而且可以显示出图片，视频等，并且可以对文字，图片加上链接（所谓链接，就是单击一下，可以打开别的页面。）。</p><h2 id="2、网页创建"><a href="#2、网页创建" class="headerlink" title="2、网页创建"></a>2、网页创建</h2><p>了解了什么是HTML以后，怎样使用HTML编写网页呢？</p><p>先创建一个记事本文件，然后重命名，格式为.html。用记事本工具编写，比较麻烦，这里可以写一个标记，演示一下，同时也说清楚了什么是标记。</p><p>我们可以用一下其它的工具来编写，提供相应的代码提示。</p><h3 id="2-1-常用工具"><a href="#2-1-常用工具" class="headerlink" title="2.1 常用工具"></a>2.1 常用工具</h3><p><img src="http://ww1.sinaimg.cn/large/006doHETly1g2ll97o7ppj30id0atq6p.jpg" alt=""></p><h3 id="2-2-Html基本结构"><a href="#2-2-Html基本结构" class="headerlink" title="2.2  Html基本结构"></a>2.2  Html基本结构</h3><p><img src="http://ww1.sinaimg.cn/large/006doHETly1g2ll8si118j30cb071dgc.jpg" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">说明：</span><br><span class="line">1、&lt;html&gt;标签的作用是所有HTML中标签的一个根节点。</span><br><span class="line">2、&lt;head&gt; 头部标签，在头部标签中我们必须设置的标签是&lt;title&gt;标签</span><br><span class="line">3、&lt;title&gt; 标签设置网页的标题</span><br><span class="line">4、&lt;body&gt; 页面在的主体部分，用于存放所有的HTML标签</span><br></pre></td></tr></table></figure><p><strong>这个结构要记住。</strong></p><p>注意：在使用sublime进行演示时，最开始敲完<html>后不要敲回车键，否则会自动填充整个代码。</html></p><p>通过整个HTML结构我们可以看出来，标签之间都是有关系的。</p><p><title>在<head>里面，而<head>和</head></head><body>是并列的。</body></title></p><h3 id="2-3-标签关系"><a href="#2-3-标签关系" class="headerlink" title="2.3 标签关系"></a>2.3 标签关系</h3><p>​   标签的相互关系就分为两种：</p><p>1.嵌套关系</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;  &lt;title&gt; &lt;/title&gt;  &lt;/head&gt;</span><br></pre></td></tr></table></figure><p>2.并列关系</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;&lt;/body&gt;</span><br></pre></td></tr></table></figure><p> 建议： 如果两个标签之间的关系是嵌套关系，子元素最好缩进一个tab键的身位。如果是并列关系，最好上下对齐。</p><p>我们发现在手敲上面的代码的时候，会比较麻烦，所以可以如下的快速输入方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">再页面中输入 以下2个单词</span><br><span class="line"></span><br><span class="line">1. html: 5</span><br><span class="line">2. !</span><br><span class="line">      在sublime里面然后按下tab键盘即可生成HTML骨架</span><br></pre></td></tr></table></figure><h3 id="2-4-文档类型-lt-DOCTYPE-gt"><a href="#2-4-文档类型-lt-DOCTYPE-gt" class="headerlink" title="2.4  文档类型&lt;!DOCTYPE&gt;"></a>2.4  文档类型&lt;!DOCTYPE&gt;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br></pre></td></tr></table></figure><p>这句话就是告诉我们使用哪个html版本？  我们使用的是 html 5 的版本。  html有很多版本，那我们应该告诉用户和浏览器我们使用的版本号。</p><h3 id="2-5-字符集"><a href="#2-5-字符集" class="headerlink" title="2.5 字符集"></a>2.5 字符集</h3><meta charset="UTF-8"><p>utf-8是目前最常用的字符集编码方式，常用的字符集编码方式还有gbk和gb2312。</p><p>gb2312 简单中文  包括6763个汉字</p><p>BIG5   繁体中文 港澳台等用</p><p>GBK包含全部中文字符    是GB2312的扩展，加入对繁体字的支持，兼容GB2312</p><p>UTF-8则包含全世界所有国家需要用到的字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">记住一点，以后我们统统使用UTF-8 字符集, 这样就避免出现字符集不统一而引起乱码的情况了。</span><br></pre></td></tr></table></figure><h1 id="二、HTML常用标签"><a href="#二、HTML常用标签" class="headerlink" title="二、HTML常用标签"></a>二、HTML常用标签</h1><p>我们学习HTML，最主要的就是用来学习标签</p><h2 id="1、排版标签"><a href="#1、排版标签" class="headerlink" title="1、排版标签"></a>1、排版标签</h2><p>排版标签主要和css搭配使用，显示网页结构的标签，是网页布局最常用的标签。</p><h3 id="1-1-标题标签-熟记"><a href="#1-1-标题标签-熟记" class="headerlink" title="1.1 标题标签 (熟记)"></a>1.1 标题标签 (熟记)</h3><p>​   我们经常会在页面中用到标题标签，HTML提供了6个等级的标题，即<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;、&lt;h2&gt;、&lt;h3&gt;、&lt;h4&gt;、&lt;h5&gt;和&lt;h6&gt;</span><br><span class="line"></span><br><span class="line"> &lt;h1&gt;用来修饰网页的主标题，&lt;h2&gt;表示一个段落的标题，&lt;h3&gt;表示段落的小节标题</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">标题标签语义：  作为标题使用，并且依据重要性递减</span><br></pre></td></tr></table></figure><p>​   其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hn</span>&gt;</span>   标题文本   <span class="tag">&lt;/<span class="name">hn</span>&gt;</span></span><br></pre></td></tr></table></figure><p>H1标签最常见的使用方法是用在logo上，如果我们要把H1标签使用在logo上，那么我们记得为图片添加alt标签以及a链接来指向首页，因为蜘蛛是无法识别图片的，所以我们要用alt标签来解释图片的意思。</p><h3 id="1-2-段落标签-熟记"><a href="#1-2-段落标签-熟记" class="headerlink" title="1.2 段落标签( 熟记)"></a>1.2 段落标签( 熟记)</h3><p>单词缩写：  paragraph  段落</p><p> 在网页中要把文字有条理地显示出来，离不开段落标签，就如同我们平常写文章一样，整个网页也可以分为若干个段落，而段落的标签就是</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>  文本内容  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>是HTML文档中最常见的标签，默认情况下，文本在一个段落中会根据浏览器窗口的大小自动换行。</p><h3 id="1-3-水平线标签-认识"><a href="#1-3-水平线标签-认识" class="headerlink" title="1.3 水平线标签(认识)"></a>1.3 水平线标签(认识)</h3><p>单词缩写：  horizontal  横线</p><p>在网页中常常看到一些水平线将段落与段落之间隔开，使得文档结构清晰，层次分明。这些水平线可以通过插入图片实现，也可以简单地通过标签来完成，<hr>就是创建横跨网页水平线的标签。其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span>是单标签</span><br></pre></td></tr></table></figure><p> 在网页中显示默认样式的水平线。建议在hr与/之间加上空格。</p><h4 id="1-3-1-标签属性"><a href="#1-3-1-标签属性" class="headerlink" title="1.3.1 标签属性"></a>1.3.1 标签属性</h4><p>属性就是特性 比如 手机的颜色 手机的尺寸 ，总结就是手机的。。</p><p>使用HTML制作网页时，如果想让HTML标签提供更多的信息，可以使用HTML标签的属性加以设置。其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">标签名</span> 属性<span class="attr">1</span>=<span class="string">"属性值1"</span> 属性<span class="attr">2</span>=<span class="string">"属性值2"</span> …&gt;</span> 内容 <span class="tag">&lt;/<span class="name">标签名</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的语法中，</p><p>1.标签可以拥有多个属性，必须写在开始标签中，位于标签名后面。</p><p>2.属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。</p><p>3.任何标签的属性都有默认值，省略该属性则取默认值。</p><p>比如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;hr width=&quot;400&quot; /&gt;</span><br></pre></td></tr></table></figure><h3 id="1-4-HTML标签分类"><a href="#1-4-HTML标签分类" class="headerlink" title="1.4  HTML标签分类"></a>1.4  HTML标签分类</h3><p>  在HTML页面中，带有“&lt; &gt;”符号的元素被称为HTML标签，如上面提到的 &lt;HTML&gt;、&lt;head&gt;、&lt;body&gt;都是HTML标签。所谓标签就是放在“&lt; &gt;” 标签符中表示某个功能的编码命令，也称为HTML标签或 HTML元素</p><p>1.双标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">标签名</span>&gt;</span> 内容 <span class="tag">&lt;/<span class="name">标签名</span>&gt;</span></span><br></pre></td></tr></table></figure><p>该语法中“&lt;标签名&gt;”表示该标签的作用开始，一般称为“开始标签（start tag）”，“&lt;/标签名&gt;” 表示该标签的作用结束，一般称为“结束标签（end tag）”。和开始标签相比，结束标签只是在前面加了一个关闭符“/”。</p><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; 比如 <span class="tag">&lt;<span class="name">body</span>&gt;</span>我是文字  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>2.单标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">标签名</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>  单标签也称空标签，是指用一个标签符号即可完整地描述某个功能的标签。</p><h3 id="1-5-换行标签-熟记"><a href="#1-5-换行标签-熟记" class="headerlink" title="1.5 换行标签(熟记)"></a>1.5 换行标签(熟记)</h3><p>单词缩写：  break   打断 ,换行</p><p>在HTML中，一个段落中的文字会从左到右依次排列，直到浏览器窗口的右端，然后自动换行。如果希望某段文本强制换行显示，就需要使用换行标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>这时如果还像在word中直接敲回车键换行就不起作用了。</p><h3 id="1-6-div-span标签-重点"><a href="#1-6-div-span标签-重点" class="headerlink" title="1.6 div span标签(重点)"></a>1.6 div span标签(重点)</h3><p>div  span    是没有语义的     是我们网页布局主要的2个盒子</p><p>div 就是  division  的缩写   分割， 分区的意思  其实有很多div 来组合网页。</p><p>  div是块级元素，都是独占一行。</p><p>span, 跨度，跨距；范围</p><p>span都是行内元素，都是在一行，主要用来展示文本。</p><p>语法格式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> 这是头部 <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    <span class="tag">&lt;<span class="name">span</span>&gt;</span>今日价格<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、HTML标签的语义化"><a href="#2、HTML标签的语义化" class="headerlink" title="2、HTML标签的语义化"></a>2、HTML标签的语义化</h2><p>白话： 所谓标签语义化，就是指标签的含义。</p><h3 id="为什么要有语义化标签"><a href="#为什么要有语义化标签" class="headerlink" title="为什么要有语义化标签"></a>为什么要有语义化标签</h3><ol><li>方便代码的阅读和维护</li><li>同时让浏览器或是网络爬虫可以很好地解析，从而更好分析其中的内容</li><li>使用语义化标签会具有更好地搜索引擎优化 ，搜索引擎会认为权重比较高。</li></ol><p>核心：合适的地方给一个最为合理的标签。</p><h2 id="3、文本格式化标签-熟记"><a href="#3、文本格式化标签-熟记" class="headerlink" title="3、文本格式化标签(熟记)"></a>3、文本格式化标签(熟记)</h2><p>在网页中，有时需要为文字设置粗体、斜体或下划线效果，这时就需要用到HTML中的文本格式化标签，使文字以特殊的方式显示。</p><p>  b  i  s  u   只有使用 没有 强调的意思       strong   em  del   ins  语义更强烈</p><h2 id="4、图像标签img-重点"><a href="#4、图像标签img-重点" class="headerlink" title="4、图像标签img (重点)"></a>4、图像标签img (重点)</h2><p>单词缩写：   image  图像</p><p>HTML网页中任何元素的实现都要依靠HTML标签，要想在网页中显示图像就需要使用图像标签，接下来将详细介绍图像标签<img>以及和他相关的属性。其基本语法格式如下：</p><p>该语法中src属性用于指定图像文件的路径和文件名，他是img标签的必需属性。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"图像URL"</span> <span class="attr">class</span>=<span class="string">"css样式"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/006doHETly1g2lla27l3uj30mw09bacn.jpg" alt=""></p><h1 id="三、路径-重点、难点"><a href="#三、路径-重点、难点" class="headerlink" title="三、路径(重点、难点)"></a>三、路径(重点、难点)</h1><p>实际工作中，通常新建一个文件夹专门用于存放图像文件，这时再插入图像，就需要采用“路径”的方式来指定图像文件的位置。</p><p>路径可以分为： 相对路径和绝对路径</p><h2 id="1、相对路径"><a href="#1、相对路径" class="headerlink" title="1、相对路径"></a>1、相对路径</h2><ol><li>图像文件和HTML文件位于同一文件夹：只需输入图像文件的名称即可，如&lt;img src=”logo.gif” /&gt;。</li><li>图像文件位于HTML文件的下一级文件夹：输入文件夹名和文件名，之间用“/”隔开，如&lt;img src=”img/img01/logo.gif” /&gt;。</li><li>图像文件位于HTML文件的上一级文件夹：在文件名之前加入“../” ，如果是上两级，则需要使用 “../ ../”，以此类推，如&lt;img src=”../logo.gif” /&gt;。</li></ol><h2 id="2、绝对路径"><a href="#2、绝对路径" class="headerlink" title="2、绝对路径"></a>2、绝对路径</h2><p>绝对路径</p><p>“D:\web\img\logo.gif”，或完整的网络地址，例如“<a href="http://www.itcast.cn/images/logo.gif”。" target="_blank" rel="noopener">http://www.itcast.cn/images/logo.gif”。</a></p><h1 id="四、链接标签-重点"><a href="#四、链接标签-重点" class="headerlink" title="四、链接标签(重点)"></a>四、链接标签(重点)</h1><p>单词缩写：  anchor 的缩写 。基本解释 锚, 铁锚 的</p><p>在HTML中创建超链接非常简单，只需用标签环绕需要被链接的对象即可，其基本语法格式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"跳转目标"</span> <span class="attr">target</span>=<span class="string">"目标窗口的弹出方式"</span>&gt;</span>文本或图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>href：用于指定链接目标的url地址，当为标签应用href属性时，它就具有了超链接的功能。  Hypertext Reference的缩写。意思是超文本引用</p><p>target：用于指定链接页面的打开方式，其取值有_self和_blank两种，其中_self为默认值，_blank为在新窗口中打开方式。</p><p>注意：</p><p>1.外部链接 需要添加 http:// <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a></p><p>2.内部链接 直接链接内部页面名称即可 比如 &lt; a href=”index.html”&gt; 首页 </p><p>3.如果当时没有确定链接目标时，通常将链接标签的href属性值定义为“#”(即href=”#”)，表示该链接暂时为一个空链接。</p><p>4.不仅可以创建文本超链接，在网页中各种网页元素，如图像、表格、音频、视频等都可以添加超链接。</p><h2 id="1、base-标签"><a href="#1、base-标签" class="headerlink" title="1、base 标签"></a>1、base 标签</h2><p>base 可以设置整体链接的打开状态</p><p>base 写到  <head>  </head>  之间</p><h2 id="2、锚点定位-（难点）"><a href="#2、锚点定位-（难点）" class="headerlink" title="2、锚点定位 （难点）"></a>2、锚点定位 （难点）</h2><p>通过创建锚点链接，用户能够快速定位到目标内容。<br>创建锚点链接分为两步：</p><p>1.使用“a href=”#id名&gt;“链接文本”创建链接文本。</p><p>2.使用相应的id名标注跳转目标的位置。</p><h1 id="五：CSS样式"><a href="#五：CSS样式" class="headerlink" title="五：CSS样式"></a>五：CSS样式</h1><h2 id="1、CSS初识"><a href="#1、CSS初识" class="headerlink" title="1、CSS初识"></a>1、CSS初识</h2><p>CSS(Cascading Style Sheets)</p><p>CSS通常称为CSS样式表或层叠样式表（级联样式表），主要用于设置HTML页面中的文本内容（字体、大小、对齐方式等）、图片的外形（宽高、边框样式、边距等）以及版面的布局等外观显示样式。</p><p>CSS以HTML为基础，提供了丰富的功能，如字体、颜色、背景的控制及整体排版等，而且还可以针对不同的浏览器设置不同的样式。</p><h2 id="2、CSS-网页的美容师"><a href="#2、CSS-网页的美容师" class="headerlink" title="2、CSS 网页的美容师"></a>2、CSS 网页的美容师</h2><p>CSS的出现，拯救了混乱的HTML，当让更加拯救了我们web开发者。 让我们的网页更加丰富多彩。</p><p>CSS的最大贡献就是：  让 HTML 从样式中解脱苦海，  实现了 HTML 专注去做 结构呈现。 而样式交给 CSS 后，你完全可以放心的早点洗洗睡了！<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">![](.\图片\db.png)</span><br><span class="line"></span><br><span class="line">网页添加 CSS和不添加CSS 的对比：</span><br><span class="line"></span><br><span class="line">带有CSS的页面</span><br><span class="line"></span><br><span class="line">![](.\图片\Cc.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">没有CSS的页面</span><br><span class="line"></span><br><span class="line">![](.\图片\fff.png)</span><br></pre></td></tr></table></figure></p><h2 id="3、CSS样式规则"><a href="#3、CSS样式规则" class="headerlink" title="3、CSS样式规则"></a>3、CSS样式规则</h2><p>使用HTML时，需要遵从一定的规范。CSS亦如此，要想熟练地使用CSS对网页进行修饰，首先需要了解CSS样式规则，具体格式如下：</p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1g2llavtvk9j30jv066myd.jpg" alt=""></p><h2 id="4-选择器（重点）"><a href="#4-选择器（重点）" class="headerlink" title="4:选择器（重点）"></a>4:选择器（重点）</h2><p>要想将CSS样式应用于特定的HTML元素，首先需要找到该目标元素。在CSS中，执行这一任务的样式规则部分被称为选择器（选择符）。</p><h3 id="4-1-标签选择器（元素选择器）"><a href="#4-1-标签选择器（元素选择器）" class="headerlink" title="4.1 标签选择器（元素选择器）"></a>4.1 标签选择器（元素选择器）</h3><p>标签选择器是指用HTML标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的CSS样式。其基本语法格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">标签名&#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3; &#125;  或者</span><br><span class="line">元素名&#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3; &#125;</span><br></pre></td></tr></table></figure><p>标签选择器最大的优点是能快速为页面中同类型的标签统一样式，同时这也是他的缺点，不能设计差异化样式。</p><h3 id="4-2-类选择器"><a href="#4-2-类选择器" class="headerlink" title="4.2 类选择器"></a>4.2 类选择器</h3><p>类选择器使用“.”（英文点号）进行标识，后面紧跟类名，其基本语法格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.类名&#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3; &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">标签调用的时候用 class=“类名”  即可。</span><br></pre></td></tr></table></figure><p>类选择器最大的优势是可以为元素对象定义单独或相同的样式。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="selector-tag">DOCTYPE</span> <span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">html</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">head</span>&gt;</span><br><span class="line">    &lt;title&gt;类选择器&lt;/title&gt;</span><br><span class="line">    &lt;style type="text/css"&gt;</span><br><span class="line">    <span class="selector-class">.c-apple</span> &#123;<span class="attribute">color</span>: red;&#125;</span><br><span class="line">    <span class="selector-class">.banana</span> &#123; <span class="attribute">color</span>: blue; &#125;</span><br><span class="line">    <span class="selector-id">#blue</span> &#123; <span class="attribute">color</span>:blue; &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">   &lt;p class="c-apple"&gt;苹果&lt;/p&gt;</span><br><span class="line">   &lt;p class="banana"&gt;橘子&lt;/p&gt;</span><br><span class="line">    &lt;p class="c-apple"&gt;香蕉&lt;/p&gt;</span><br><span class="line">    &lt;p id="blue"&gt;菠萝&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="4-3-选择器命名规范"><a href="#4-3-选择器命名规范" class="headerlink" title="4.3  选择器命名规范"></a>4.3  选择器命名规范</h3><p>1.长名称或词组可以使用中横线来为选择器命名。<br>2.不建议使用“_”下划线来命名CSS选择器。</p><p>​       能良好区分JavaScript变量命名(JS变量命名是用“_”)</p><p>3.不要纯数字、中文等命名， 尽量使用英文字母来表示。</p><h3 id="4-4-ID选择器"><a href="#4-4-ID选择器" class="headerlink" title="4.4 ID选择器"></a>4.4 ID选择器</h3><p>id选择器使用“#”进行标识，后面紧跟id名，其基本语法格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#id名&#123;属性1:属性值1; 属性2:属性值2; 属性3:属性值3; &#125;</span><br></pre></td></tr></table></figure><p>该语法中，id名即为HTML元素的id属性值，大多数HTML元素都可以定义id属性，元素的id值是唯一的，只能对应于文档中某一个具体的元素。</p><p>用法基本和类选择器相同。</p><h3 id="4-5-类选择器与ID选择器区别"><a href="#4-5-类选择器与ID选择器区别" class="headerlink" title="4.5 类选择器与ID选择器区别"></a>4.5 类选择器与ID选择器区别</h3><p>在同一个页面内，不允许有相同名字的id对象出现，但是允许相同名字的class。</p><p>类选择器（class） 好比人的名字，  是可以多次重复使用的， 比如  张伟  王伟  李伟  李娜</p><p>id选择器     好比人的身份证号码，  全中国是唯一的， 不得重复。 只能使用一次。</p><p><em>id选择器和类选择器最大的不同在于 使用次数上。</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">     <span class="selector-class">.fontSize</span>&#123;</span></span><br><span class="line"><span class="undefined">        font-size: 25px;</span></span><br><span class="line"><span class="undefined">     &#125;</span></span><br><span class="line"><span class="css">     <span class="selector-id">#blue</span>&#123;</span></span><br><span class="line"><span class="undefined">        color: red;</span></span><br><span class="line"><span class="undefined">     &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fontSize"</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"fontSize"</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"blue"</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"blue"</span>&gt;</span>马六<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 及时浏览器的兼容性比较好，使用多次id也能够显示，但是坚决不能使用id多次。 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-6-通配符选择器"><a href="#4-6-通配符选择器" class="headerlink" title="4.6 通配符选择器"></a>4.6 通配符选择器</h3><p>通配符选择器用“*”号表示，他是所有选择器中作用范围最广的，能匹配页面中所有的元素。其基本语法格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* &#123; 属性1:属性值1; 属性2:属性值2; 属性3:属性值3; &#125;</span><br></pre></td></tr></table></figure><p>例如下面的代码，使用通配符选择器定义CSS样式，清除所有HTML标记的默认边距。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;                    <span class="comment">/* 定义外边距*/</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;                   <span class="comment">/* 定义内边距*/</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="4-7-案例"><a href="#4-7-案例" class="headerlink" title="4.7 案例"></a>4.7 案例</h3><p>制作一个完善的新闻详情页面。</p><p>第一步：我们首先通过HTML来进行网页结构的设计</p><p>第二：通过CSS样式来进行相应的美化。</p><p>在这个案例中，我们会讲解几个关于文本修饰的样式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>;  <span class="comment">/*让文本居中显示*/</span></span><br><span class="line"><span class="selector-tag">text-indent</span>: 2<span class="selector-tag">em</span>; <span class="comment">/*首行缩进2个字*/</span></span><br><span class="line"><span class="selector-tag">font-weight</span>: <span class="selector-tag">bolder</span>; <span class="comment">/* 对文字进行加错*/</span></span><br></pre></td></tr></table></figure><p>具体案例如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>新闻详情页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        h1 &#123;</span></span><br><span class="line"><span class="undefined">            font-size: 25px;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>;  <span class="comment">/*让文本居中显示*/</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        div &#123;</span></span><br><span class="line"><span class="undefined">            font-size: 14px;</span></span><br><span class="line"><span class="undefined">            text-align: center;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        p &#123;</span></span><br><span class="line"><span class="undefined">            font-size: 14px;</span></span><br><span class="line"><span class="undefined">            line-height: 22px;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-indent</span>: 2<span class="selector-tag">em</span>; <span class="comment">/*首行缩进2个字*/</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.sports</span>&#123;</span></span><br><span class="line"><span class="undefined">            color: red;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.co</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>:<span class="selector-id">#ccc</span>;</span></span><br><span class="line"><span class="undefined">            font-weight: bolder;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>中乙队赛前突然换帅仍胜毅腾 高原黑马欲阻击舜天<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>2017年07月16日20:11 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sports"</span>&gt;</span>新浪体育 评论中大奖<span class="tag">&lt;/<span class="name">span</span>&gt;</span>（11人参与）<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"co"</span>&gt;</span>收藏本文<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>新浪体育讯　7月16日是燕京啤酒[微博]2017中国足协杯第三轮比赛，丽江嘉云昊队主场迎战哈尔滨毅腾队的比赛日。然而就在比赛日中午，丽江嘉云昊队主帅李虎和另外两名成员悄然向俱乐部提出了辞呈，并且收拾行囊准备离开。在这样的情况下，丽江嘉云昊队不得不由此前的教练员杨贵东代理指挥了本场比赛。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>在昨日丽江嘉云昊队主帅李虎就缺席了赛前的新闻发布会，当时俱乐部给出的解释是李虎由于身体欠佳，去医院接受治疗。然而今日李虎出现在俱乐部时，向记者否认了这一说法，并且坦言已经向俱乐部提出了辞呈。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>据记者多方了解的情况，李虎[微博]极其教练组近来在执教成绩上承受了不小的压力，在联赛间歇期期间，教练组曾向俱乐部提出能够多引进有实力的球员补强球队，然而由于和俱乐部在投入以及成绩指标上的分歧，李虎最终和教练组一起在比赛日辞职。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这样的情况并没有影响到丽江嘉云昊队[微博]的队员，在比赛中丽江队在主场拼的非常凶，在暴雨之中仍然发挥出了体能充沛的优势，最终凭借点球击败了中超球队哈尔滨毅腾，顺利晋级下一轮比赛。根据中国足协杯的赛程，丽江嘉云昊队将在本月23日迎战江苏舜天队。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-8-后代选择器"><a href="#4-8-后代选择器" class="headerlink" title="4.8 后代选择器"></a>4.8 后代选择器</h3><p>后代选择器又称为包含选择器，用来选择元素或元素组的后代，其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔。当标签发生嵌套时，内层标签就成为外层标签的后代。</p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1g2llcmau9sj30ha060adq.jpg" alt=""><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    /*</span></span><br><span class="line"><span class="undefined">    div p &#123;</span></span><br><span class="line"><span class="undefined">        color: red;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    */</span></span><br><span class="line"><span class="css">   <span class="selector-class">.father</span> <span class="selector-tag">p</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span><span class="selector-pseudo">:blue</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">   &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"father"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>马六</span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>啊啊啊<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="4-9-选择器的优先级"><a href="#4-9-选择器的优先级" class="headerlink" title="4.9 选择器的优先级"></a>4.9 选择器的优先级</h3><p>前面，我们学习了，标签选择器，类选择器，ID选择器，后代选择器，那么我们来看一下它们的优先级问题。</p><p>1、类选择器优先级高于标签选择器。</p><p>2、ID选择器优先级高于类选择器，也高于标签选择器。</p><p>3、后代选择器，要根据情况确定，与ID选择器结合使用优先级要高于与类选择器结合使用优先级</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.bxg</span>&#123;</span></span><br><span class="line"><span class="undefined">        color: red;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    div &#123;</span></span><br><span class="line"><span class="undefined">        color: blue;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-id">#box</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">color</span><span class="selector-pseudo">:green</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">div</span> <span class="selector-class">.bxg</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span><span class="selector-pseudo">:orange</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"box"</span> <span class="attr">class</span>=<span class="string">"bxg"</span> &gt;</span>博学谷线上平台<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5、块级标签显示模式"><a href="#5、块级标签显示模式" class="headerlink" title="5、块级标签显示模式"></a>5、块级标签显示模式</h2><h3 id="5-1、块级元素-block-level-（重点）"><a href="#5-1、块级元素-block-level-（重点）" class="headerlink" title="5.1、块级元素(block-level)（重点）"></a>5.1、块级元素(block-level)（重点）</h3><p>每个块元素通常都会独自占据一整行或多整行，可以对其设置宽度、高度、对齐等属性，常用于网页布局和网页结构的搭建。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">常见的块元素有&lt;h1&gt;~&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、等，其中&lt;div&gt;标签是最典型的块元素。</span><br></pre></td></tr></table></figure><p>块级元素非常适合布局(可以打开某个网站，看一下其对应的布局)，所以我们常说DIV+CSS</p><p>块级元素的特点：</p><p>（1）总是从新行开始</p><p>（2）高度，行高、外边距以及内边距都可以控制。</p><p>（3）宽度默认是容器的100%</p><p>（4）可以容纳内联元素（行内元素）和其他块元素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>块级元素<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    div &#123;</span></span><br><span class="line"><span class="undefined">        background-color: orange;</span></span><br><span class="line"><span class="undefined">        width: 500px;</span></span><br><span class="line"><span class="undefined">        height: 200px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-2、行内元素-inline-level-（重点）"><a href="#5-2、行内元素-inline-level-（重点）" class="headerlink" title="5.2、行内元素(inline-level)（重点）"></a>5.2、行内元素(inline-level)（重点）</h3><p>行内元素（内联元素）不占有独立的区域，仅仅靠自身的字体大小和图像尺寸来支撑结构，一般不可以设置宽度、高度、对齐等属性，常用于控制页面中文本的样式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">常见的行内元素有&lt;a&gt;、&lt;strong&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;del&gt;、&lt;s&gt;、&lt;ins&gt;、&lt;u&gt;、&lt;span&gt;等，其中&lt;span&gt;标签最典型的行内元素。</span><br></pre></td></tr></table></figure><p>行内元素的特点：</p><p>（1）和相邻行内元素在一行上。</p><p>（2）高、宽无效，但水平方向的padding和margin可以设置，垂直方向的无效。</p><p>（3）默认宽度就是它本身内容的宽度。</p><p>（4）行内元素只能容纳文本或则其他行内元素。（a特殊）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        span&#123;</span></span><br><span class="line"><span class="undefined">            background-color: orange;</span></span><br><span class="line"><span class="undefined">            width: 200px;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">height</span>: 300<span class="selector-tag">px</span>; <span class="comment">/*高度与宽度不起作用*/</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 默认宽度就是它本身内容的宽度。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>张三是一个好人<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>马六<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：</p><ol><li>只有 文字才 能组成段落  因此 p  里面不能放块级元素，同理还有这些标签h1,h2,h3,h4,h5,h6他们都是文字类块级标签，里面不能放其他块级元素。例如，不能在p标签中添加添加div标签。</li><li>链接里面不能再放链接。</li></ol><h3 id="5-3、块级元素和行内元素区别（重点）"><a href="#5-3、块级元素和行内元素区别（重点）" class="headerlink" title="5.3、块级元素和行内元素区别（重点）"></a>5.3、块级元素和行内元素区别（重点）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">块级元素的特点：</span><br><span class="line">（1）总是从新行开始</span><br><span class="line">（2）高度，行高、外边距以及内边距都可以控制。</span><br><span class="line">（3）宽度默认是容器的100%</span><br><span class="line">（4）可以容纳内联元素和其他块元素。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">行内元素的特点：</span><br><span class="line">（1）和相邻行内元素在一行上。</span><br><span class="line">（2）高、宽无效，但水平方向的padding和margin可以设置，垂直方向的无效。</span><br><span class="line">（3）默认宽度就是它本身内容的宽度。</span><br><span class="line">（4）行内元素只能容纳文本或则其他行内元素。</span><br></pre></td></tr></table></figure><h3 id="5-4-、行内块元素（inline-block）（了解）"><a href="#5-4-、行内块元素（inline-block）（了解）" class="headerlink" title="5.4 、行内块元素（inline-block）（了解）"></a>5.4 、行内块元素（inline-block）（了解）</h3><p>在行内元素中有几个特殊的标签——<img>、<input>、<td>，可以对它们设置宽高和对齐属性，有些资料可能会称它们为行内块元素。</td></p><p>行内块元素的特点：<br>（1）和相邻行内元素（行内块）在一行上,但是之间会有空白缝隙。<br>（2）默认宽度就是它本身内容的宽度。<br>（3）高度，行高、外边距以及内边距都可以控制。</p><p> 行内块元素既有块级元素的特点，又有行内元素的特定。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span> 行内块元素<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    input &#123;</span></span><br><span class="line"><span class="undefined">        width: 300px;</span></span><br><span class="line"><span class="undefined">        height: 20px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userName"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userEmail"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-5、-标签显示模式转换-display"><a href="#5-5、-标签显示模式转换-display" class="headerlink" title="5.5、 标签显示模式转换 display"></a>5.5、 标签显示模式转换 display</h3><p>##</p><p>块转行内：display:inline;</p><p>行内转块：display:block;</p><p>块、行内元素转换为行内块： display: inline-block;</p><p>此阶段，我们只需关心这三个，其他的是我们后面的工作。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>标签显示模式转换 display<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    div &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">display</span>: <span class="selector-tag">inline</span>; <span class="comment">/*将块级元素转换成行内元素显示模式*/</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    span &#123;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">display</span>: <span class="selector-tag">block</span>; <span class="comment">/*将行内元素转换成块级元素显示模式*/</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    a &#123;</span></span><br><span class="line"><span class="undefined">        background-color: orange;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">width</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line"><span class="css">        <span class="selector-tag">height</span><span class="selector-pseudo">:30px</span>; <span class="comment">/*a标签是行内元素，所以宽高无效，但是我们在后期网页设计中经常来控制a标签的高度与宽度，所以在这里我们可以转换成行内块元素的显示模式*/</span></span></span><br><span class="line"><span class="css">        <span class="selector-tag">display</span><span class="selector-pseudo">:inline-block</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>123<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>456<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>780<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>abc<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>def<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>hig<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/p&gt;&lt;h3&gt;我挺可怜昨晚那个男生的，毕竟我曾经和他一样无助&lt;/h3&gt;&lt;br&gt;
    
    </summary>
    
      <category term="web学习" scheme="https://GodPang.github.io/categories/web%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="前端" scheme="https://GodPang.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>路由器刷固件</title>
    <link href="https://GodPang.github.io/2019/03/24/%E8%B7%AF%E7%94%B1%E5%99%A8%E5%88%B7%E5%9B%BA%E4%BB%B6/"/>
    <id>https://GodPang.github.io/2019/03/24/路由器刷固件/</id>
    <published>2019-03-24T10:51:33.000Z</published>
    <updated>2019-03-24T10:55:03.900Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006doHETly1g1e2hwd20hj31hf0p1dj0.jpg" alt=""><br><a id="more"></a></p><h1 id="斐讯k2刷固件"><a href="#斐讯k2刷固件" class="headerlink" title="斐讯k2刷固件"></a>斐讯k2刷固件</h1><p>周日下午闲来无聊准备折腾一下宿舍里的垃圾路由器斐讯k2<br>原本只是听说过，但没自己弄过，尝试着自己刷一下,我这里尝试的是高恪（读作kè）<br>本来以为要去找<a href="http://bbs.pcbeta.com/" target="_blank" rel="noopener">远景</a>软件，找了一圈神他妈远景，是<a href="https://www.right.com.cn/forum/" target="_blank" rel="noopener">恩山</a></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>要用到的东西 <code>bread</code> <a href="https://tbvv.net/k2/breed.zip" target="_blank" rel="noopener">https://tbvv.net/k2/breed.zip</a><br><code>K2等7620A刷机专用固件-支持升级AP固件-4.0.1.11029..bin</code><br>K2 K1等7620A系列专用底包：<a href="https://pan.baidu.com/s/1o7U6QpW" target="_blank" rel="noopener">https://pan.baidu.com/s/1o7U6QpW</a><br><code>高恪-S1A_8M(K2+K1等8M闪存+64M内存7620A机型全功能升级包)-4.2.6.15899.bin.web</code><br>K2及其他机型（S1B、MTK 7621等）的免费固件地址:<a href="https://pan.baidu.com/s/1y15rUtAUkhY8XvPrtv_vSA" target="_blank" rel="noopener">https://pan.baidu.com/s/1y15rUtAUkhY8XvPrtv_vSA</a> 提取码:f7kp</p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1g1e233tfanj309i03y0un.jpg" alt=""></p><h2 id="刷机Breed"><a href="#刷机Breed" class="headerlink" title="刷机Breed"></a>刷机Breed</h2><ol><li><p>下载辅助工具，解压所有文件到任意目录。</p></li><li><p>双击运行 刷机.bat 按照提示输入路由的IP和密码，如果是默认的直接按回车。<br>(全新或恢复出厂没设置过的路由直接回车按提示配置路由)</p></li><li><p>等待路由重启，1分钟左右会用浏览器打开路由页面，如果自动登录成功或者手动升级页面有变  化 就说明刷breed成功了。<br>(管理密码: tbvv.net)</p></li><li><p>接着进入：高级设置 —&gt; 系统设置 —&gt; 手动升级 —&gt; 下载备份EEPROM(是一个压缩包)。</p></li><li><p>……完成。</p></li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1g1e27a3z5oj30k60d87db.jpg" alt=""></p><ol start="2"><li>斐讯查看ip浏览器输入<code>p.to</code>，在高级设置查看</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1g1e29b0tvxj30j107jtcj.jpg" alt=""></p><h2 id="进bread刷入K2等7620A刷机专用固件-支持升级AP固件-4-0-1-11029-bin"><a href="#进bread刷入K2等7620A刷机专用固件-支持升级AP固件-4-0-1-11029-bin" class="headerlink" title="进bread刷入K2等7620A刷机专用固件-支持升级AP固件-4.0.1.11029..bin"></a>进bread刷入<code>K2等7620A刷机专用固件-支持升级AP固件-4.0.1.11029..bin</code></h2><ol><li>路由WAN口的网线拔掉避免IP冲突，电脑网线连接路由LAN口，电脑网卡设置为自动获取IP<br>路由断电3秒—&gt;按住复位键不要松手—&gt;插入电源—&gt;等待5秒后松开复位键—&gt;浏览器输入192.168.1.1—&gt;固件更新—&gt;选择固件刷入。</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1g1e2dktmbwj30nu0co40f.jpg" alt=""></p><ol start="2"><li>等待路由器刷机成功并重启即可访问管理后台</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1g1e2eg1jycj30mr06pdgr.jpg" alt=""></p><ol start="3"><li>后台地址 192.168.1.1</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1g1e2hwd20hj31hf0p1dj0.jpg" alt=""></p><h2 id="进入高恪后台刷入高恪-S1A-8M-K2-K1等8M闪存-64M内存7620A机型全功能升级包-4-2-6-15899-bin-web"><a href="#进入高恪后台刷入高恪-S1A-8M-K2-K1等8M闪存-64M内存7620A机型全功能升级包-4-2-6-15899-bin-web" class="headerlink" title="进入高恪后台刷入高恪-S1A_8M(K2+K1等8M闪存+64M内存7620A机型全功能升级包)-4.2.6.15899.bin.web"></a>进入高恪后台刷入<code>高恪-S1A_8M(K2+K1等8M闪存+64M内存7620A机型全功能升级包)-4.2.6.15899.bin.web</code></h2><ol><li>系统管理——&gt;固件升级——&gt;本地升级——&gt;选择.web</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1g1e2mrmlasj311b0qgtaw.jpg" alt=""></p><h2 id="附一个比较明白的视频地址"><a href="#附一个比较明白的视频地址" class="headerlink" title="附一个比较明白的视频地址"></a>附一个比较明白的视频地址</h2><p><a href="https://v.youku.com/v_show/id_XMjk1MTYyMTE4MA==.html?spm=a2h0j.11185381.listitem_page1.5~A" target="_blank" rel="noopener">高恪官方教程</a></p><h2 id="过段时间在刷带ssr的潘多拉。"><a href="#过段时间在刷带ssr的潘多拉。" class="headerlink" title="过段时间在刷带ssr的潘多拉。"></a>过段时间在刷带ssr的潘多拉。</h2><ol><li>不让路由器折腾，和咸鱼有啥区别。<br>又水一篇博客。。。。<br>end。。。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006doHETly1g1e2hwd20hj31hf0p1dj0.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="杂货铺" scheme="https://GodPang.github.io/categories/%E6%9D%82%E8%B4%A7%E9%93%BA/"/>
    
    
      <category term="路由器" scheme="https://GodPang.github.io/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>GitHub学生认证</title>
    <link href="https://GodPang.github.io/2019/03/05/GitHub%E5%AD%A6%E7%94%9F%E8%AE%A4%E8%AF%81/"/>
    <id>https://GodPang.github.io/2019/03/05/GitHub学生认证/</id>
    <published>2019-03-05T06:28:41.000Z</published>
    <updated>2019-03-05T06:37:30.460Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006doHETly1g0rwseiksyj30k708fq3e.jpg" alt=""><br><a id="more"></a></p><h2 id="github学生包是什么"><a href="#github学生包是什么" class="headerlink" title="github学生包是什么"></a>github学生包是什么</h2><p>GitHub 有一项教育支撑计划，叫 GitHub Education。除了在线课程和交流获得之外，GitHub Education 还提供了一项极其良心的福利，叫[<a href="https://education.github.com/pack" target="_blank" rel="noopener">GitHub学生开发工具包</a>]</p><h2 id="下面介绍如何获得学生认证"><a href="#下面介绍如何获得学生认证" class="headerlink" title="下面介绍如何获得学生认证"></a>下面介绍如何获得学生认证</h2><p><img src="http://ww1.sinaimg.cn/large/006doHETly1g0rw0vd18zj31h30nxadh.jpg" alt=""></p><ol><li>进入[<a href="https://education.github.com/pack" target="_blank" rel="noopener">GitHub学生开发工具包</a>]网页后点击<a href="https://education.github.com/pack/offers" target="_blank" rel="noopener">get your back</a> 进入下一步,点击Yes,I’m a student 填写表单，在复选框中选择对应的校园邮箱账户。如果你没有校园邮箱，可以选择第一个选项，然后上传学信网截图，或者学生证照片。（由于我事先在github上登陆过，所以和其他人有些不同直接跳的了这个界面）</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1g0rw33plqsj30of0fzq44.jpg" alt=""></p><ol start="3"><li><p>上传学生证，填写理由</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I am a junior student from China, and I used Github to share my code with my classmates and friends since I entered university.</span><br></pre></td></tr></table></figure></li><li><p>等待审核。查看是否成功。</p><h2 id="GitHub-学生开发工具包提供了什么"><a href="#GitHub-学生开发工具包提供了什么" class="headerlink" title="GitHub 学生开发工具包提供了什么"></a>GitHub 学生开发工具包提供了什么</h2></li></ol><ul><li>Atom：由 GitHub 推出的开源程式代码编辑器（免费）</li><li>AWS 亚马逊云服务 $75-$150 信用额度。</li><li>Bitnami：云端应用平台，Business 3 Plan 一年（价值 49刀/月）</li><li>CARTO 为期两年的高级账户。</li><li>CrowdFlower：商业数据分析、处理平台，含 50 刀额度（价值 2,500 刀/月）</li><li>Datadog 2 年期高级账户服务。</li><li>DigitalOcean $50 账户信用额度。</li><li>Udacity 优达学城为期 1 个月的订阅服务，可以学习所有纳米学位课程，正常售价为 $199 。</li><li>Flatiron School 一个月高级账户，正常售价为 $149/月。</li><li>GitKraken 1 年期高级账户，正常售价 $60/月。</li><li>GitHub：免费升级为 Micro Account（价值 7 刀/月）</li><li>Hackhands：24/7 即时程式设计协助平台，含 25 刀的额度</li><li>Namecheap：.me 网域名称一年(价值8.99刀)、PositiveSSL 一年（价值9刀）</li><li>SendGrid：Email 相关服务，学生方案每月可发送 15,000 封邮件</li><li>Stripe：网页及行动支付平台，首次 1,000美刀收益无需支付手续费</li><li>Travis CI：针对开放原始码或私人项目的集成平台，提供 Private Builds（价值 69 刀/月）</li><li>Unreal Engine：针对 PC、行动装置、网页和 VR 所建置的游戏开发平台，提供 Unreal Engine 帐户权限（价值 19 刀/月）</li></ul><p><img src="http://ww1.sinaimg.cn/large/006doHETly1g0rwbmduq8j30rd2264a2.jpg" alt=""></p><h3 id="JetBrains-学生开发授权-也是我的目的"><a href="#JetBrains-学生开发授权-也是我的目的" class="headerlink" title="JetBrains 学生开发授权(也是我的目的)"></a>JetBrains 学生开发授权(也是我的目的)</h3><p>JetBrains 是业界知名的 IDE 开发商，旗下有非常多的开发者工具。无论是学习 Java，PHP，Ruby，Python，JavaScript，Objective-C，.NET 任何一种开发技术，都有对应的开发工具帮助到你。</p><p>JetBrains 的教育优惠官方称之为<a href="https://www.jetbrains.com/zh/student/" target="_blank" rel="noopener">JetBrains Toolbox 专业开发工具学生免费授权计划</a>。学生可以免费获得「All Products Pack 全产品包」。这个优惠力度可以说极其良心，因为 JetBrains 全产品包的订阅售价为 249 美元/年。</p><ul><li style="list-style: none"><input type="checkbox" checked> END</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006doHETly1g0rwseiksyj30k708fq3e.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="杂货铺" scheme="https://GodPang.github.io/categories/%E6%9D%82%E8%B4%A7%E9%93%BA/"/>
    
    
      <category term="软件认证" scheme="https://GodPang.github.io/tags/%E8%BD%AF%E4%BB%B6%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>开学了</title>
    <link href="https://GodPang.github.io/2019/02/24/%E5%BC%80%E5%AD%A6%E4%BA%86/"/>
    <id>https://GodPang.github.io/2019/02/24/开学了/</id>
    <published>2019-02-24T12:08:58.000Z</published>
    <updated>2019-02-24T12:18:00.631Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006doHETly1g0hrxw7emaj31j00u0gln.jpg" alt=""></p><a id="more"></a><hr><ol><li>竟然这么久没写博客了，该打。</li><li>开学了慢慢，更博客</li><li>今天忙了一天，累。</li><li>师哥区南京实习去了。</li><li>三月份国赛，发现平常练习不能丢啊。平时不练习，比赛两行泪。</li><li>想考研。</li><li>想买一个平板。</li><li>把wireshark的书看完，学习python爬虫。</li><li>就先写到这吧睡觉，太累了，明天要上课怕起晚。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006doHETly1g0hrxw7emaj31j00u0gln.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="杂货铺" scheme="https://GodPang.github.io/categories/%E6%9D%82%E8%B4%A7%E9%93%BA/"/>
    
    
      <category term="随笔" scheme="https://GodPang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>MySQL4</title>
    <link href="https://GodPang.github.io/2018/12/06/MySQL4/"/>
    <id>https://GodPang.github.io/2018/12/06/MySQL4/</id>
    <published>2018-12-06T05:30:34.000Z</published>
    <updated>2018-12-06T05:35:18.061Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006doHETly1fxwyrotwozj33y8280e8c.jpg" alt=""><br><a id="more"></a></p><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><h3 id="用户信息存储位置"><a href="#用户信息存储位置" class="headerlink" title="用户信息存储位置"></a>用户信息存储位置</h3><p>mysql中的用户，都存储在mysql系统的系统数据库“mysql”中。</p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fxwycaygzlj30bl031t8z.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxwyd92si1j30fb02cq44.jpg" alt=""></p><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><p><code>create user ‘用户名’@’允许登录的位置(ip)’ identified by ‘密码’</code></p><p>举例：</p><p><code>create user &#39;user1&#39;@&#39;ip地址&#39; identified by &#39;123&#39;;</code></p><h3 id="修改用户密码："><a href="#修改用户密码：" class="headerlink" title="修改用户密码："></a>修改用户密码：</h3><p>修改自己的密码：</p><p><code>set password = password(‘新密码’);</code></p><p>修改他人的密码（有权限的情况下）：</p><p><code>set password for ‘用户名’@’允许登录的位置’ = password(‘新密码’);</code></p><h2 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h2><h4 id="什么是权限"><a href="#什么是权限" class="headerlink" title="什么是权限"></a>什么是权限</h4><p>权限就是可以做某事的权利，比如可以“insert”（插入），可以create（创建），update，delete…</p><p>其中“all”，表示“所有权限”</p><p>实际上，在mysql系统中，权限就是如上述这些“单词”；</p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fxwygvo6a7j30e807atao.jpg" alt=""></p><p>细化为：</p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fxwyhbk09mj30f40ea7bh.jpg" alt=""></p><h4 id="授予用户权限"><a href="#授予用户权限" class="headerlink" title="授予用户权限"></a>授予用户权限</h4><p><code>grant 权限1，权限2，.... on 某库.某下级单位 to ‘用户名’@’允许登录的位置’ 【identified by ‘密码’】</code></p><p>说明：</p><p>1，权限名称有比如：insert, update, select, delete, create, drop ……</p><p>2，“某下级单位”是指一个库中的下级数据元素，目前我们只学了2个：表，视图；</p><p>比如：php.学生表 或 php.int_test</p><p>有两个特殊写法：</p><p><code>*.*</code>：表示所有数据库中的所有下级单位；</p><p><code>某库.*</code> ： 表示该数据库中的所有下级单位</p><p>3， 如果是对现有用户授予权限，则identified 部分可以省略，如果不省略，就是表示修改其密码；</p><p>而对于一个新用户（即‘用户名’@’允许登录的位置’其实尚不存在），则是<code>identified by</code>部分不可以省略，而且，该grant语句，其实就是会创建一个新用户！</p><p>4，也可以授予“所有权限”：</p><p><code>grant all privileges on php.* to &#39;user1&#39;@&#39;ip地址&#39;;</code></p><h4 id="取消用户权限"><a href="#取消用户权限" class="headerlink" title="取消用户权限"></a>取消用户权限</h4><p><code>revoke 权限1，权限2，.... on 某库.某下级单位 from ‘用户名’@’允许登录的位置’</code></p><p>说明：</p><p>1各项含义跟grant语句一样；</p><p>2表示将某个用户在某个数据单位上的某些权限取消。</p><p><strong>整理于百度</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006doHETly1fxwyrotwozj33y8280e8c.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="MySQL笔记" scheme="https://GodPang.github.io/categories/MySQL%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="MySQL" scheme="https://GodPang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>ctf基本的文件上传与绕过学习</title>
    <link href="https://GodPang.github.io/2018/12/04/ctf%E5%9F%BA%E6%9C%AC%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8E%E7%BB%95%E8%BF%87%E5%AD%A6%E4%B9%A0/"/>
    <id>https://GodPang.github.io/2018/12/04/ctf基本的文件上传与绕过学习/</id>
    <published>2018-12-04T15:09:34.000Z</published>
    <updated>2018-12-04T15:17:47.093Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv4bb911yj31hc0u0e81.jpg" alt=""><br><a id="more"></a></p><h2 id="绕过客户端校验前台脚本检测扩展名上传webs-hell"><a href="#绕过客户端校验前台脚本检测扩展名上传webs-hell" class="headerlink" title="绕过客户端校验前台脚本检测扩展名上传webs hell"></a>绕过客户端校验前台脚本检测扩展名上传webs hell</h2><h3 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h3><p>当用户在客户端选择文件点击上传的时候，客户端还没有向服务器发送任何<br>消息，就对本地文件进行检测来判断是否是可以上传的类型，这种方式称为前台<br>脚本检测扩展名。<br>绕过前台脚本检测扩展名，就是将所要上传文件的扩展名更改为符合脚本检<br>测规则的扩展名，通过 BurpSuite 工具，截取数据包，并将数据包中文件扩展名<br>更改回原来的，达到绕过的目的</p><h3 id="实验："><a href="#实验：" class="headerlink" title="实验："></a>实验：</h3><ol><li>打开要上传的页面,上传要上传的木马文件lurb.php，点击上传。<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxuoo1fn7aj30re0hjwhm.jpg" alt=""></li><li>页面显示错误<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxuopj2ev2j30ou0g8grf.jpg" alt=""></li><li>返回上传页面，点击浏览，选择要上传的木马文件lubr.jpg(把lubr.php重命名<br>lubr.jpg)<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxuoq7b9npj30q60gtdiq.jpg" alt=""></li><li>上传用burpsuite抓包，将.jpg改为.php,点击’forward’发送数据包，进行绕过。<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxuouj166mj30r50imjuw.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxuov8udekj30r80iln0p.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxuoweonj3j30rg0a5taf.jpg" alt=""><h2 id="绕过-Content-Type-检测文件类型上传"><a href="#绕过-Content-Type-检测文件类型上传" class="headerlink" title="绕过 Content-Type 检测文件类型上传"></a>绕过 Content-Type 检测文件类型上传</h2><h3 id="原理：-1"><a href="#原理：-1" class="headerlink" title="原理："></a>原理：</h3>当浏览器在上传文件到服务器的时候，服务器对所上传文件的Content-Type类型进行检测，如果是白名单允许的，则可以正常上传，否则上传失败。绕过Content–Type文件类型检测，就是用BurpSuite 截取并修改数据包中文件的Content-Type类型，使其符合白名单的规则，达到上传的目的。<h3 id="实验：-1"><a href="#实验：-1" class="headerlink" title="实验："></a>实验：</h3>1.打开要上传文件的页面，上传木马lubr.php。报错<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxup0z3iunj30rb0kg0wc.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxup1otp04j30r80b5dhl.jpg" alt=""><br>2.利用burpsuite抓包更改Content-Type由application/octet-stream改为148<br>image/gif。点击’forward’发送数据包。<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxup4apphxj30n70je0vk.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxup4y5uv2j30n90j641c.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxup5oecwnj30ng0a375i.jpg" alt=""><h2 id="绕过服务器端扩展名检测上传"><a href="#绕过服务器端扩展名检测上传" class="headerlink" title="绕过服务器端扩展名检测上传"></a>绕过服务器端扩展名检测上传</h2><h3 id="原理：-2"><a href="#原理：-2" class="headerlink" title="原理："></a>原理：</h3>当浏览器将文件提交到服务器端的时候，服务器端会根据设定的黑白名单对浏览器提交上来的文件扩展名进行检测，如果上传的文件扩展名不符合黑白名单的限制，则不予上传，否则上传成功。</li></ol><p>将一句话木马的文件名 lubr.php，改成lubr.php.abc。首先，服务器验证文件扩展名的时候，验证的是.abc，只要该扩展名符合服务器端黑白名单规则，即可上传。另外，当在浏览器端访问该文件时，Apache如果解析不了.abc扩展名，会向前寻找可解析的扩展名，即.php。一句话木马可以被解析，即可通过中国菜刀连接。apache解析文件名从后往前解析</p><h3 id="实验：-2"><a href="#实验：-2" class="headerlink" title="实验："></a>实验：</h3><ol><li>打开要上传文件的页面，上传木马文件lubr.php。上传报错<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxupby7gvlj30lw0gkjtw.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxupccbbhnj30ng0j3jt6.jpg" alt=""></li><li>返回上传页面，点击浏览，选择要上传的木马文件lubr.php.abc(由lubr.php重命名lubr.php.abc)，点击上传<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxupdsgx20j30n90k2tbs.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxupe4pwhrj30n308rq46.jpg" alt=""><h2 id="00截断上传"><a href="#00截断上传" class="headerlink" title="00截断上传"></a>00截断上传</h2><h3 id="原理：-3"><a href="#原理：-3" class="headerlink" title="原理："></a>原理：</h3>利用00截断就是利用程序员在写程序时对文件的上传路径过滤不严格，产生0x00上传截断漏洞。</li></ol><p>假设文件的上传路径为<a href="http://xx.xx.xx.xx/upfiles/lubr.php.jpg，通过抓包截断将【lubr.php】后面的【.】换成【0x00】。在上传的时候，当文件系统读到【0x00】时，会认为文件已经结束，从而将【lubr.php.jpg】的内容写入到【lubr.php】中，从而达到攻击的目的。" target="_blank" rel="noopener">http://xx.xx.xx.xx/upfiles/lubr.php.jpg，通过抓包截断将【lubr.php】后面的【.】换成【0x00】。在上传的时候，当文件系统读到【0x00】时，会认为文件已经结束，从而将【lubr.php.jpg】的内容写入到【lubr.php】中，从而达到攻击的目的。</a></p><h3 id="实验：-3"><a href="#实验：-3" class="headerlink" title="实验："></a>实验：</h3><ol><li>打开需要上传的网页，选择需要上传的木马文件‘xxx.php.jpg’上传.<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv2upfq87j30jc0grn2o.jpg" alt=""></li><li>burp suite抓包。<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv2vvwd36j30j90ebgsb.jpg" alt=""></li><li>单击“hex”标签页，点击【hex】，进入到十六进制源码界面。<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv2x3xj5xj30jd0ea7ia.jpg" alt=""></li><li>找到【lubr.php.jpg】对应的十六进制源码，将【lubr.php】后【.】对应的【2e】改为【00】<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv2yq1s4wj30jh0eatmf.jpg" alt=""></li><li>点击【forward】，即可成功上传文件<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv2zedp1gj30jd09x40q.jpg" alt=""><h2 id="构造图片木马上传绕过"><a href="#构造图片木马上传绕过" class="headerlink" title="构造图片木马上传绕过"></a>构造图片木马上传绕过</h2><h3 id="原理：-4"><a href="#原理：-4" class="headerlink" title="原理："></a>原理：</h3>一般文件内容验证使用getimagesize()函数检测，会判断文件是否是一个有效的文件图片，如果是，则允许上传，否则的话不允许上传。本实例就是将一句话木马插入到一个【合法】的图片文件当中，然后用中国菜刀远程连接。<h3 id="实验：-4"><a href="#实验：-4" class="headerlink" title="实验："></a>实验：</h3></li><li>随便找一个图片，与所要上传的木马放置于同一文件夹下。打开cmd，进入木马所在文件夹<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv33yviy1j30fc0gfdm0.jpg" alt=""></li><li>输入copy pic.jpg/b+lubr.php/a PicLubr.jpg，将【lubr.php】插入到【pic.jpg】中。<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv34vu95lj30ee03774l.jpg" alt=""></li><li>上传图片木马，并访问。<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv35nkki7j30el04an0z.jpg" alt=""><h2 id="Apache-解析漏洞上传文件"><a href="#Apache-解析漏洞上传文件" class="headerlink" title="Apache 解析漏洞上传文件"></a>Apache 解析漏洞上传文件</h2><h3 id="原理：-5"><a href="#原理：-5" class="headerlink" title="原理："></a>原理：</h3>Apache识别文件类型是从右向左识别的，如果如遇不认识的扩展名会向前一次识别，知道遇到能别<br>的扩展名<h3 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h3></li><li>将原本不能上传的xx.php文件更名为xx.php.abc上传即可<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv39b0llbj30f302ijrp.jpg" alt=""><h2 id="Fckeditor漏洞上传webshell"><a href="#Fckeditor漏洞上传webshell" class="headerlink" title="Fckeditor漏洞上传webshell"></a>Fckeditor漏洞上传webshell</h2><h3 id="原理：-6"><a href="#原理：-6" class="headerlink" title="原理："></a>原理：</h3>Fckeditor在2.4.2以下存在一个直接上传任意文件的上传页面，可直接上传webshell<h3 id="实验：-5"><a href="#实验：-5" class="headerlink" title="实验："></a>实验：</h3></li><li>打开网站判断是否有fckeditor编辑器出现403禁止访问，说明此目录存在<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv3hrtw2lj30f407v0v3.jpg" alt=""></li><li>判断fckeditor编辑器版本号，输入：<a href="http://192.168.1.3:8001/FCKeditor/_whatsnew.html，由返回页面可知此fckeditor编辑器版本为2.0" target="_blank" rel="noopener">http://192.168.1.3:8001/FCKeditor/_whatsnew.html，由返回页面可知此fckeditor编辑器版本为2.0</a><br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv3iu0higj30jd0b5443.jpg" alt=""></li><li>此版本fckeditor存在两个上传漏洞页面：<br><a href="p">FCKeditor/editor/filemanager/browser/default/browser.html?type=Image&amp;connector=connectors/asp/connector.as</a><br><a href="">FCKeditor/editor/filemanager/browser/default/connectors/asp/connector.asp?Command=GetFoldersAndFiles&amp;Type=zhang&amp;CurrentFolder=/</a><br>第一个页面是在网站根目录下的userfiles目录下的Image目录下打开一个上传页面，上传的文件都保存在这个目录下；<br>第二是在网站根目录下的userfiles目录下创建一个zhang目录。1.4打开<br><a href="http://192.168.1.3:8001/FCKeditor/editor/filemanager/browser/default/browser.html?type=Image&amp;connector=connectors/asp/connector.asp" target="_blank" rel="noopener">http://192.168.1.3:8001/FCKeditor/editor/filemanager/browser/default/browser.html?type=Image&amp;connector=connectors/asp/connector.asp</a><br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv3nyydhij30jl0bzq59.jpg" alt=""></li><li>00截断上传，先上传一个jpg类型文件，再上传一个asp文件报错。burp suite抓包进行00截断上传。<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv3qrxel6j30jh0crae9.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv3r20yt8j30ji0cgadx.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv3rapl8kj30jh0cujw5.jpg" alt=""></li><li>设置代理，再次上传类型为ASP的文件webshell.asp.jpg(把webshell.asp重命名webshell.asp.jpg即可)，击”upload”按钮<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv3vl5am7j30jg0cwq5d.jpg" alt=""></li><li>burpsuite 抓到包 进到hex选项卡更改00截断<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv3szoovcj30jm0f5gyp.jpg" alt=""></li><li>将.jpg的.的hex’2e‘改为00<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv3xm40dfj30jh0ex4bk.jpg" alt=""></li><li>切换为raw模式，空格变为如图样子，单击“forward”按钮（多单击几次），继续发送请求数据包<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv3ypj96uj30jf0f4gs7.jpg" alt=""></li><li>切换为history<br>标签，选择截获的数据包，然后再单击“reponse”标签页，发现文件的上传路径为“/UserFiles/Image/”<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv3zj6gjgj30ja0f9qdv.jpg" alt=""></li><li>取消浏览器的代理设置，刷新上传页面，可以看到webshell.asp.jpg文件已经上传成功，并命名为webshell.asp。<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fxv40t1m54j30jh0crjt6.jpg" alt=""></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006doHETly1fxv4bb911yj31hc0u0e81.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="ctf学习笔记" scheme="https://GodPang.github.io/categories/ctf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="web" scheme="https://GodPang.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>博客美化</title>
    <link href="https://GodPang.github.io/2018/11/14/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"/>
    <id>https://GodPang.github.io/2018/11/14/博客美化/</id>
    <published>2018-11-14T12:32:11.000Z</published>
    <updated>2018-11-14T12:41:08.673Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006doHETly1fx7vi620ccj32yo1o0x6w.jpg" alt=""><br><a id="more"></a></p><h2 id="git-一些命令"><a href="#git-一些命令" class="headerlink" title="git 一些命令"></a>git 一些命令</h2><ol><li>本地部署<blockquote><p>hexo s -g</p></blockquote></li><li>新建一篇博客<blockquote><p>hexo new post “博客名”</p></blockquote></li><li>部署文章到github<blockquote><p>hexo d -g</p></blockquote></li><li>可能需要安装扩展<blockquote><p>npm install hexo-deployer-git –save</p></blockquote></li><li>可能清除缓存<blockquote><p>hexo cl </p></blockquote></li><li>一切在git里执行</li></ol><h2 id="将博客语言更改为中文"><a href="#将博客语言更改为中文" class="headerlink" title="将博客语言更改为中文"></a>将博客语言更改为中文</h2><ol><li>原本hexo的语言文件夹<code>D:\hexo\themes\landscape\languages</code>下没有<code>zh-Hans.yml</code>这个文件。</li><li>原本next的语言文件夹<code>D:\hexo\themes\next\languages</code>下没有<code>zh-CN.yml</code>这个文件。</li><li>将<code>zh-Hans.yml`</code>zh-CN.yml`分别添加到两个文件夹内。</li><li>修改hexo的配置文件<code>_config.yml</code>如下：</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwq0dn1r9qj309m05bdfz.jpg" alt=""></p><p>5.这样就可以修改博客语言为中文了。</p><h2 id="博客实现点击爱心效果"><a href="#博客实现点击爱心效果" class="headerlink" title="博客实现点击爱心效果"></a>博客实现点击爱心效果</h2><ol><li><p>在<code>D:\hexo\themes\next\source\js\src</code>下新建<code>clicklove.js</code>把以下代码粘贴进去</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!function(e,t,a)&#123;functionn()&#123;c(&quot;.heart&#123;width:10px;height:10px;position:fixed;background:#f00;transform:rotate(45deg);-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);&#125;.heart:after,.heart:before&#123;content:&apos;&apos;;width:inherit;height:inherit;background:inherit;border-radius:50%;-webkit-border-radius:50%;-moz-border-radius:50%;position:fixed;&#125;.heart:after&#123;top:-5px;&#125;.heart:before&#123;left:-5px;&#125;&quot;),o(),r()&#125;functionr()&#123;for(vare=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;)rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;functiono()&#123;vart=&quot;function&quot;==typeofe.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;functioni(e)&#123;vara=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;functionc(e)&#123;vara=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;functions()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;vard=[];e.requestAnimationFrame=function()&#123;returne.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure></li><li><p>修改<code>_layout.swig</code>在<code>D:\hexo\themes\next\layout\_layout.swig</code>文件末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 页面点击小红心 --&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ol><h2 id="博客书写标题和实现预览部分"><a href="#博客书写标题和实现预览部分" class="headerlink" title="博客书写标题和实现预览部分"></a>博客书写标题和实现预览部分</h2><ol><li>部分预览效果图</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwr90y6v1ej30v30ne7a3.jpg" alt=""><br>实现方法：<br>在文章标题栏下添加<code>&lt;!-- more --&gt;</code>注意不要为空加张图片也可<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fwr95pqf31j30iv05mt8w.jpg" alt=""></p><ol start="2"><li>博客标题添加在文章最顶部<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: MySQL3</span><br><span class="line">date: 2018-10-22 22:16:12</span><br><span class="line">tags: // 标签</span><br><span class="line">- MySQL</span><br><span class="line">copyr: true</span><br><span class="line">categories: MySQL笔记  //分类</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwr95pqf31j30iv05mt8w.jpg" alt=""></p><h2 id="添加音乐"><a href="#添加音乐" class="headerlink" title="添加音乐"></a>添加音乐</h2><ol><li>打开网易云音乐，找到你想要添加到博客的音乐。点击生成外链</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fx7pw2l6nzj30s50lcgxh.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006doHETly1fx7pztad4xj30q80icwju.jpg" alt=""></p><ol start="2"><li>在<code>\hexo\themes\next\layout\_custom</code>新建<code>sidebar.swig</code>打开sidebar.swig，将生成的html代码贴到里边<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;music163player&quot;&gt;</span><br><span class="line">    &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=330 height=86 src=&quot;//music.163.com/outchain/player?type=2&amp;id=526763682&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ol><p>如图所示：</p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fx7q2br700j30jw06hjrv.jpg" alt=""></p><ol start="3"><li>保存,部署查看效果：</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fx7q4qnesvj30720fu0tb.jpg" alt=""></p><h2 id="添加博客评论"><a href="#添加博客评论" class="headerlink" title="添加博客评论"></a>添加博客评论</h2><ol><li>我选择了<code>Valine</code>的系统，因为他方便简洁。网站<a href="https://leancloud.cn/" target="_blank" rel="noopener">Valine</a></li><li>进入网站注册账号,点击小齿轮:</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fx7r6jp4ubj30nd0c8jru.jpg" alt=""></p><ol start="3"><li>如图:</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fx7r86kagcj30tt0f442p.jpg" alt=""></p><ol start="4"><li>拿到你的appid和appkey之后，打开主题配置文件 搜索 valine，填入appid 和 appkey(注意next6.0.1版本 的配置文件:<code>app_id: app_key:</code>)贴出我的代码：</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fx7rkwyx0wj30ei06xgmc.jpg" alt=""></p><ol start="5"><li>最后！记得在Leancloud -&gt; 设置 -&gt; 安全中心 -&gt; Web 安全域名 把你的域名加进去</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fx7rlmvduwj316x0nv0vm.jpg" alt=""></p><ol start="6"><li>部署，可以评论了</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fx7rmopd4jj30rp0hmdgm.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006doHETly1fx7vi620ccj32yo1o0x6w.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="https://GodPang.github.io/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="博客" scheme="https://GodPang.github.io/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>MySQL3</title>
    <link href="https://GodPang.github.io/2018/10/22/MySQL3/"/>
    <id>https://GodPang.github.io/2018/10/22/MySQL3/</id>
    <published>2018-10-22T14:16:12.000Z</published>
    <updated>2018-10-30T02:43:37.241Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwq1xucw19j31hc0u0qj8.jpg" alt=""><br><a id="more"></a></p><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><ol><li>通过create databsae 语句创建数据库<blockquote><p>create database 数据库名； </p></blockquote></li><li>通过create schema 语句创建数据库<blockquote><p>create schema 数据库名；</p></blockquote></li><li><p>创建指定字符集的数据库</p><blockquote><p>create database 数据库名<br>-&gt; character set = gbk;  <strong>默认utf-8</strong></p></blockquote></li><li><p>创建数据库时判断是否存在同名数据库</p><blockquote><p>create dateabase if not exists 数据库名;</p></blockquote></li></ol><h2 id="查看使用数据库"><a href="#查看使用数据库" class="headerlink" title="查看使用数据库"></a>查看使用数据库</h2><ol><li>查看数据库<blockquote><p>show databases;</p></blockquote></li><li>使用数据库<blockquote><p>use 数据库名；</p></blockquote><h2 id="修改删除数据库"><a href="#修改删除数据库" class="headerlink" title="修改删除数据库"></a>修改删除数据库</h2></li><li>修改数据库中相关参数</li></ol><blockquote><p> alter database 数据库名<br>-&gt;    default character set gbk <strong>修改字符集为gbk</strong><br>-&gt;    default collate gbk_chinese_ci <strong>;</strong> <strong>修改字符的校对规则为简体中文</strong></p></blockquote><ol start="2"><li>删除数据库/表<blockquote><p>drop database 数据库名 ;</p></blockquote></li></ol><blockquote><p>drop table 表名；</p></blockquote><h2 id="对表的一些操作"><a href="#对表的一些操作" class="headerlink" title="对表的一些操作"></a>对表的一些操作</h2><ol><li>在数据库中创建表<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table 表名（</span><br><span class="line">列名 参数，</span><br><span class="line">列名 参数，</span><br><span class="line">。。。</span><br><span class="line">）；</span><br></pre></td></tr></table></figure></li></ol><p>查看表结构 <code>desc 表名</code></p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwhbma78p3j30j10drjtf.jpg" alt=""></p><ol start="2"><li>一些常用的参数</li></ol><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">not null</td><td style="text-align:center">非空</td></tr><tr><td style="text-align:center">default xx</td><td style="text-align:center">表示默认值</td></tr><tr><td style="text-align:center">auto_increment</td><td style="text-align:center">自动编号</td></tr><tr><td style="text-align:center">primary key</td><td style="text-align:center">是否为主键</td></tr><tr><td style="text-align:center">reference_definition</td><td style="text-align:center">添加注释</td></tr></tbody></table><ol start="3"><li>复制表结构</li></ol><p>I 只复制表结构</p><blockquote><p>create table 新表名 like 原表名；</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwhc1pml6tj30j501kdfu.jpg" alt=""></p><p>II 复制表时并复制内容</p><p><code>create table 新表名 as select * from 原表名</code></p><p>III 同时复制表结构与内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create table 新表名 like 原表名；</span><br><span class="line">insert into 新表名 select*from 原表名；</span><br></pre></td></tr></table></figure><ol start="4"><li>更改表的存储引擎更改为MyISAM类型。</li></ol><p><code>alter table 表名 engine = myisam;</code></p><ol start="5"><li>使用命令行将表中的某一列删除</li></ol><p><code>alter table 表名 drop column 列名；</code></p><ol start="6"><li>将Sex列的默认值修改为男(1)</li></ol><p><code>alter table 表名 alter sex set default 1;</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006doHETly1fwq1xucw19j31hc0u0qj8.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="MySQL笔记" scheme="https://GodPang.github.io/categories/MySQL%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="MySQL" scheme="https://GodPang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>实验吧——隐写术——欢迎来到地狱</title>
    <link href="https://GodPang.github.io/2018/10/16/%E5%AE%9E%E9%AA%8C%E5%90%A7%E2%80%94%E2%80%94%E9%9A%90%E5%86%99%E6%9C%AF%E2%80%94%E2%80%94%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E5%9C%B0%E7%8B%B1/"/>
    <id>https://GodPang.github.io/2018/10/16/实验吧——隐写术——欢迎来到地狱/</id>
    <published>2018-10-16T08:26:30.000Z</published>
    <updated>2018-12-04T15:14:07.869Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwq20qgijtj30et08cwem.jpg" alt=""><br><a id="more"></a></p><h1 id="欢迎来到地狱"><a href="#欢迎来到地狱" class="headerlink" title="欢迎来到地狱"></a>欢迎来到地狱</h1><h2 id="一道比较综合的隐写题目"><a href="#一道比较综合的隐写题目" class="headerlink" title="一道比较综合的隐写题目"></a>一道比较综合的隐写题目</h2><p>图片头文件添加，摩斯电码，word隐藏字符查看，图片解密，图片分离，zip字典爆破，base64解码，兔子解码，凯撒密码等<br><a href="http://ctf5.shiyanbar.com/stega/hell/欢迎来到地狱.zip" target="_blank" rel="noopener">题目链接</a></p><ol><li>下载下来是一个压缩包</li><li>解压压缩包后出现三个文件.jpg .zip .docx</li><li>发现图片打开不显示，用winhex打开发现缺少文件头，将jpg的文件头补上</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwa4jkysg5j30dl06r42h.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwa4k7t486j30a309rtco.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwa4kjsn97j307003y752.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwa4ktwyvuj30di058djs.jpg" alt=""></p><ol start="4"><li>保存后图片可以打开</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwa4lotv6oj30n903hmzv.jpg" alt=""></p><ol start="5"><li>是一个百度网盘的链接，注意l和1的区别，网盘里是一个音频文件<a href="https://pan.baidu.com/s/1i49Jhlj" target="_blank" rel="noopener">地狱之声</a></li><li>audacity 打开,类似摩斯电码</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwa4oadtgzj30pq0jnqav.jpg" alt=""></p><blockquote><p>-.-/./-.–/.-.././-/..-/…/–./—</p></blockquote><p>通过<a href="http://www.ip138.com/mosi/" target="_blank" rel="noopener">摩斯电码解密</a>得到：KEYLETUSGO，我们得到得到<strong>第二层地狱</strong>word密码:letusgo(小写有点坑)</p><ol start="7"><li>打开word</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwa4taow8vj30gm0mltjv.jpg" alt=""></p><ol start="8"><li><p>通过以知信息 图片里有、东西啊。</p></li><li><p>用<a href="http://www.atool.org/steganography.php" target="_blank" rel="noopener">在线解密隐藏信息文件</a>得到：</p></li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwa4wtquu0j30pq098426.jpg" alt=""></p><p>并得到压缩包密码：you are in finally hell now</p><ol start="10"><li>用上面的密码解压压缩包：得到两个文件，一张图和一个文本，文本里面的内容是这样的：</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwa4zk9yqkj30ls03zq49.jpg" alt=""></p><p>一看就是ascii的二进制，8个一组转换一下，就是ruokouling，打开压缩包有一个txt一个图片，txt解码是提示ruokouling(弱口令)，</p><p>怀疑图片不单纯，果然，binwalk一看，还有个压缩包，弱口令，字典打一下，得到密码Password</p><p>解压后是一个txt，打开有一段密码</p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwa51epc06j30fh04lt95.jpg" alt=""></p><blockquote><p>VTJGc2RHVmtYMTlwRG9yWjJoVFArNXcwelNBOWJYaFZlekp5MnVtRlRTcDZQZE42elBLQ01BPT0=</p></blockquote><ol start="11"><li>胜利就在眼前，贝斯意思是base64，还有一个兔子洞穴，意思是rabbit，名门望族指的是凯撒，最后把这个字符串经过base64-&gt;rabbit-&gt;Cesar之后得到flag:<blockquote><p>woshinimendexiaojiejieyo</p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006doHETly1fwq20qgijtj30et08cwem.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="ctf学习笔记" scheme="https://GodPang.github.io/categories/ctf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="隐写术" scheme="https://GodPang.github.io/tags/%E9%9A%90%E5%86%99%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>下载了一些工具</title>
    <link href="https://GodPang.github.io/2018/10/14/%E4%B8%8B%E8%BD%BD%E4%BA%86%E4%B8%80%E4%BA%9B%E5%B7%A5%E5%85%B7/"/>
    <id>https://GodPang.github.io/2018/10/14/下载了一些工具/</id>
    <published>2018-10-14T14:57:57.000Z</published>
    <updated>2018-10-30T02:52:21.616Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwq278boa6j31hc0u07e9.jpg" alt=""><br><a id="more"></a></p><h2 id="老师给了赛宁网安的VIP账号，有好多工具顺手下载了下来"><a href="#老师给了赛宁网安的VIP账号，有好多工具顺手下载了下来" class="headerlink" title="老师给了赛宁网安的VIP账号，有好多工具顺手下载了下来"></a>老师给了赛宁网安的VIP账号，有好多工具顺手下载了下来</h2><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw85bybnpkj314h0mq0yf.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw85cd8p4mj318c0mfafo.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw85cpbeowj311o0kojw7.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw85cxvpywj30td0l3dkb.jpg" alt=""></p><h2 id="然后今天社团第一次上课去的人很多，该给一些学习资料了。顺便清理下人员"><a href="#然后今天社团第一次上课去的人很多，该给一些学习资料了。顺便清理下人员" class="headerlink" title="然后今天社团第一次上课去的人很多，该给一些学习资料了。顺便清理下人员"></a>然后今天社团第一次上课去的人很多，该给一些学习资料了。顺便清理下人员</h2><h2 id="要讨论干事纳新问题"><a href="#要讨论干事纳新问题" class="headerlink" title="要讨论干事纳新问题"></a>要讨论干事纳新问题</h2><h2 id="报名了大数据比赛"><a href="#报名了大数据比赛" class="headerlink" title="报名了大数据比赛"></a>报名了大数据比赛</h2><h2 id="明天满课-报完名就睡觉"><a href="#明天满课-报完名就睡觉" class="headerlink" title="明天满课,报完名就睡觉"></a>明天满课,报完名就睡觉</h2><h2 id="要报名蓝盾杯了"><a href="#要报名蓝盾杯了" class="headerlink" title="要报名蓝盾杯了"></a>要报名蓝盾杯了</h2><h2 id="可能10-25到11-10号都在不了学校了。潍坊，北京，淄博。"><a href="#可能10-25到11-10号都在不了学校了。潍坊，北京，淄博。" class="headerlink" title="可能10.25到11.10号都在不了学校了。潍坊，北京，淄博。"></a>可能10.25到11.10号都在不了学校了。潍坊，北京，淄博。</h2><h2 id="今天好像没学什么东西。MySQL学习遇到了瓶颈，mooc上的课程没忘了做，不过都是搜索的答案，差评。"><a href="#今天好像没学什么东西。MySQL学习遇到了瓶颈，mooc上的课程没忘了做，不过都是搜索的答案，差评。" class="headerlink" title="今天好像没学什么东西。MySQL学习遇到了瓶颈，mooc上的课程没忘了做，不过都是搜索的答案，差评。"></a>今天好像没学什么东西。MySQL学习遇到了瓶颈，mooc上的课程没忘了做，不过都是搜索的答案，差评。</h2><h2 id="嘤嘤嘤，学习好难，我不想努力了，我想找个小富婆包养我，哈哈哈。"><a href="#嘤嘤嘤，学习好难，我不想努力了，我想找个小富婆包养我，哈哈哈。" class="headerlink" title="嘤嘤嘤，学习好难，我不想努力了，我想找个小富婆包养我，哈哈哈。"></a>嘤嘤嘤，学习好难，我不想努力了，我想找个小富婆包养我，哈哈哈。</h2><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw85mntgq9j30qo0jymzu.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006doHETly1fwq278boa6j31hc0u07e9.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="杂货铺" scheme="https://GodPang.github.io/categories/%E6%9D%82%E8%B4%A7%E9%93%BA/"/>
    
    
      <category term="随笔" scheme="https://GodPang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>MySQL1</title>
    <link href="https://GodPang.github.io/2018/10/13/MySQL1/"/>
    <id>https://GodPang.github.io/2018/10/13/MySQL1/</id>
    <published>2018-10-13T13:48:40.000Z</published>
    <updated>2018-10-30T02:51:50.244Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwq26ljdxlj308c04oglg.jpg" alt=""><br><a id="more"></a></p><h1 id="ubuntu安装-VMware-Tools"><a href="#ubuntu安装-VMware-Tools" class="headerlink" title="ubuntu安装 VMware Tools"></a>ubuntu安装 VMware Tools</h1><ol><li>现在再开始进入系统后，在VMware菜单栏找到安装虚拟工具的时候，它会弹出一个文件夹，里面就有VMware Tools的安装包。</li><li>直接把WMwareTools拷贝出来到桌面</li><li>然后打开终端解压<blockquote><p>命令：tar -xzvf  VMwareTools-10.0.6-3595377.tar.gz(注意版本号)</p></blockquote></li><li>进入解压后的目录，执行：sudo ./wmware-install.pl  然后就一直回车了。</li><li>Ubuntu会进行的很顺利，而其他发行版却未必。一直回车到底，到最后提示成功，reboot就可以了。<h1 id="安装MySQL"><a href="#安装MySQL" class="headerlink" title="安装MySQL"></a>安装MySQL</h1><h2 id="安装前检查"><a href="#安装前检查" class="headerlink" title="安装前检查"></a>安装前检查</h2></li><li>先要检查Linux系统中是否已经安装了MySQL，输入命令尝试打开MySQL服务：<blockquote><p>sudo service mysql start</p></blockquote></li><li>输入密码后，如果出现以下提示，则说明系统中已经安装有 MySQL：</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw6gzby33qj30pq04ygpc.jpg" alt=""></p><ol start="3"><li>如果提示是这样的，则说明系统中没有 MySQL，需要继续安装：</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw6gxuh29cj30fn013t8p.jpg" alt=""></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li>在Ubuntu上安装MySQL，最简单的方式是在线安装。只需要几行简单的命令（ # 号后面是注释）：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#安装 MySQL 服务端、核心程序</span><br><span class="line">sudo apt-get install mysql-server</span><br><span class="line"></span><br><span class="line">#安装 MySQL 客户端</span><br><span class="line">sudo apt-get install mysql-client</span><br></pre></td></tr></table></figure></li></ol><p>在安装过程中会提示确认输入YES，设置 root 用户密码（之后也可以修改）等，稍等片刻便可安装成功。</p><ol start="2"><li>安装结束后，用命令验证是否安装并启动成功：<blockquote><p>sudo netstat -tap | grep mysql<br>如果出现如下提示，则安装成功：</p></blockquote></li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw6hbuzqelj30dq01mwek.jpg" alt=""></p><h2 id="尝试MySQL"><a href="#尝试MySQL" class="headerlink" title="尝试MySQL"></a>尝试MySQL</h2><ol><li>使用如下两条命令，打开MySQL服务并使用root用户登录：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 启动 MySQL 服务</span><br><span class="line">sudo service mysql start             </span><br><span class="line"></span><br><span class="line"># 使用 root 用户登录，实验楼环境的密码为空，直接回车就可以登录</span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure></li></ol><p>执行成功会出现如下提示：</p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw6hfqigtpj30hd0agabq.jpg" alt=""></p><ol start="2"><li>使用命令 show databases;，查看有哪些数据库（注意不要漏掉分号 ;）：</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw6hghiu50j3085054jri.jpg" alt=""></p><ol start="3"><li>选择连接其中一个数据库，语句格式为 use &lt;数据库名&gt;，这里可以不用加分号，这里我们选择 information_schema 数据库：<blockquote><p>use information_schema</p></blockquote></li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw6higs6qij30h802lwem.jpg" alt=""></p><ol start="4"><li>使用命令 show tables; 查看数据库中有哪些表（注意不要漏掉“;”）：</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw6hjns0vpj30ey0ab3zg.jpg" alt=""></p><ol start="5"><li>使用命令 quit 或者 exit 退出 MySQL。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006doHETly1fwq26ljdxlj308c04oglg.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="MySQL笔记" scheme="https://GodPang.github.io/categories/MySQL%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="MySQL" scheme="https://GodPang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL2</title>
    <link href="https://GodPang.github.io/2018/10/13/MySQL2/"/>
    <id>https://GodPang.github.io/2018/10/13/MySQL2/</id>
    <published>2018-10-13T13:48:40.000Z</published>
    <updated>2018-10-30T02:52:53.686Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwq27s2l1nj31gg0ti0yg.jpg" alt=""><br><a id="more"></a></p><ol><li>首先，我们创建一个数据库，给它一个名字，比如 mysql_shiyan，以后的几次实验也是对 mysql_shiyan 这个数据库进行操作。 语句格式为 CREATE DATABASE &lt;数据库名字&gt;;，（注意不要漏掉分号 ;），前面的 CREATE DATABASE 也可以使用小写，具体命令为：<blockquote><p>CREATE DATABASE mysql_shiyan;</p></blockquote></li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw6iita7quj30c00760t4.jpg" alt=""></p><p>在大多数系统中，SQL 语句都是不区分大小写的，因此以下语句都是合法的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE name1;</span><br><span class="line">create database name2;</span><br><span class="line">CREATE database name3;</span><br><span class="line">create DAtabaSE name4;</span><br></pre></td></tr></table></figure></p><ol start="2"><li>接下来的操作，就在刚才创建的 mysql_shiyan 中进行，首先要连接数据库，使用语句 use &lt;数据库名字&gt;：<blockquote><p>use mysql_shiyan</p></blockquote></li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw6ilijafuj306e01lwec.jpg" alt=""></p><p>输入命令 show tables; 可以查看当前数据库里有几张表，现在mysql_shiyan 里还是空的：</p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw6in752wvj307n02uwej.jpg" alt=""></p><ol start="3"><li>一个数据库中一般会有多张表;在数据库中新建一张表的语句格式为：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE 表的名字</span><br><span class="line">(</span><br><span class="line">列名a 数据类型(数据长度),</span><br><span class="line">列名b 数据类型(数据长度)，</span><br><span class="line">列名c 数据类型(数据长度)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li></ol><p>我们尝试在 mysql_shiyan 中新建一张表 employee，包含姓名，ID 和电话信息，所以语句为：</p><blockquote><p>CREATE TABLE employee (id int(10),name char(20),phone int(12));</p></blockquote><p>然后再创建一张表 department，包含名称和电话信息，想让命令看起来更整洁，你可以这样输入命令：</p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw6itlb43vj30af03v3yo.jpg" alt=""></p><p>这时候再 show tables;<br>一下，可以看到刚才添加的两张表</p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw6iwhceu0j309a04e3ym.jpg" alt=""></p><ol start="4"><li>刚才我们新建了两张表，使用语句 SELECT * FROM employee; 查看表中的内容，可以看到 employee 表中现在还是空的：</li></ol><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw6izts7vbj308r024jrb.jpg" alt=""></p><p>我们通过 INSERT 语句向表中插入数据，语句格式为：</p><blockquote><p>INSERT INTO 表的名字(列名a,列名b,列名c) VALUES(值1,值2,值3);</p></blockquote><p>我们尝试向 employee 中加入 Tom、Jack 和 Rose：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO employee(id,name,phone) VALUES(01,&apos;Tom&apos;,110110110);</span><br><span class="line"></span><br><span class="line">INSERT INTO employee VALUES(02,&apos;Jack&apos;,119119119);</span><br><span class="line"></span><br><span class="line">INSERT INTO employee(id,name) VALUES(03,&apos;Rose&apos;);</span><br></pre></td></tr></table></figure></p><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw6j8vdcn3j308p04pwel.jpg" alt=""></p><p>删除一条记录，命令如下：</p><blockquote><p>delete from employee(表名) where id（列名） = ‘2（元素名称）’;</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/006doHETly1fw6j8a1l1lj30cd05oglz.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006doHETly1fwq27s2l1nj31gg0ti0yg.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="MySQL笔记" scheme="https://GodPang.github.io/categories/MySQL%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="MySQL" scheme="https://GodPang.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Python集训笔记</title>
    <link href="https://GodPang.github.io/2018/09/20/Python%E9%9B%86%E8%AE%AD%E7%AC%94%E8%AE%B0/"/>
    <id>https://GodPang.github.io/2018/09/20/Python集训笔记/</id>
    <published>2018-09-20T15:11:06.000Z</published>
    <updated>2018-10-30T02:49:37.108Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwq24e52h3j31hc0u0ag7.jpg" alt=""><br><a id="more"></a></p><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><h2 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h2><table><thead><tr><th>对象类型</th><th>例子</th></tr></thead><tbody><tr><td>数字</td><td>12，1.2,1+2j</td></tr><tr><td>字符串</td><td>‘afds’，”fdsaf’dsf”</td></tr><tr><td>列表</td><td>[5,3,2,1],[1,[2,’three’],4]</td></tr><tr><td>字典</td><td>{‘food’:’spam’,’taste’:’yum’}</td></tr><tr><td>元组</td><td>(1,’spam’,4,’U’)</td></tr><tr><td>集·合</td><td>set(‘abc’),{‘a’,’b’,’c’}</td></tr><tr><td>布尔型</td><td>True，False</td></tr><tr><td>None</td><td>None</td></tr></tbody></table><h2 id="空值None"><a href="#空值None" class="headerlink" title="空值None"></a>空值None</h2><blockquote><ol><li>用来语法占位</li><li>变量解除锁定</li></ol></blockquote><h2 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h2><p>1+2*3</p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><table><thead><tr><th>运算符</th><th>释义</th></tr></thead><tbody><tr><td>+</td><td>加法</td></tr><tr><td>-</td><td>减法</td></tr><tr><td>*</td><td>乘法</td></tr><tr><td>/</td><td>除法</td></tr><tr><td>//</td><td>整除、地板除</td></tr><tr><td>%</td><td>取余</td></tr><tr><td>**</td><td>幂运算</td></tr><tr><td>is/is not</td><td>判定是否为同一对象</td></tr><tr><td>复合运算符</td><td>进行复合合运算</td></tr><tr><td>比较运算符</td><td>&gt;、&lt;、==、!=</td></tr><tr><td></td><td>(不可以使用&lt;&gt;或&gt;&lt;)</td></tr></tbody></table><p>遵守数学运算优先级。</p><hr><hr><hr><center>START</center><hr><hr><hr><h2 id="基本输出函数"><a href="#基本输出函数" class="headerlink" title="基本输出函数"></a>基本输出函数</h2><p>格式：<br>    <b>print(‘哈罗世界！’)</b></p><p>事例：</p><ul><li>print(1+2*3)</li><li>print(‘asfas”)</li><li>print(1+2,3+4,100)</li><li>a=10  print(a)</li></ul><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>定义：</p><blockquote><p>   关联一个对象的标识符（符号）。</p></blockquote><p>作用：</p><blockquote><p>   用来绑定一个数据对象，以便以后重复使用。</p></blockquote><p>命名方法：</p><blockquote><ol><li>必须为字母或下划线开头，可由字母、下划线、数字组成</li><li>不能使用python关键字（保留字）</li><li>区分大小写</li></ol></blockquote><h2 id="赋值语句-statement"><a href="#赋值语句-statement" class="headerlink" title="赋值语句    statement"></a>赋值语句    statement</h2><p>符号：  =</p><p>语法：</p><blockquote><ul><li>变量名 = 表达式</li><li>变量名1 = 变量名2 = 表达式</li><li>变量名1,变量名2,…… = 序列</li></ul></blockquote><p>作用：</p><blockquote><p>  用于将一个变量绑定在一个对象上</p></blockquote><p>说明：</p><blockquote><ol><li>当变量不存在时，创建该变量，并绑定此变量</li><li>当变量存在时，改变此变量的绑定关系</li><li>一个变量只能绑定一个对象</li><li>两个变量可以同时绑定同一个对象</li><li>等号可以理解为：赋值、引用、指针</li></ol></blockquote><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import math</span><br><span class="line">r=3</span><br><span class="line">print(&apos;C=&apos;,2*r*math.pi)</span><br><span class="line">print(&apos;S=&apos;,r**2*math.pi)</span><br></pre></td></tr></table></figure></p><p>交换变量：</p><blockquote><p>a,b = b,a</p></blockquote><hr><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>id(x)</p><blockquote><p>返回一个对象在内存中的地址</p></blockquote><p>del 变量名</p><blockquote><p>删除变量同时解除与对象的关联关系</p></blockquote><p>自动化内存管理和引用计数：</p><blockquote><p>每个对象都会记录有几个变量引用自身，当引用的数量为零的时候，此对象将被销毁</p></blockquote><p>complex(a,b)</p><blockquote><p>(a+bj）</p></blockquote><p>bool(x)</p><blockquote><p>x=0或x空时，返回False，其他情况返回True</p></blockquote><p>int(x) float(x)……</p><blockquote><p>转换变量类型</p></blockquote><p>abs(x)</p><blockquote><p>取绝对值</p></blockquote><p>round(数值[,精确值])</p><blockquote><p>四舍五入，保留位数</p></blockquote><p>help()</p><blockquote><p>查看函数帮助</p></blockquote><h2 id="语句-statements"><a href="#语句-statements" class="headerlink" title="语句 statements"></a>语句 statements</h2><ul><li>a = 10</li><li>del a</li><li>print(100)<blockquote><p>语句时python执行的最小单位，语句可以独立执行</p></blockquote></li></ul><p>说明：</p><blockquote><p>多条语句写在一行内需要用分号分开<br>通常一条语句写作一行内</p></blockquote><p>折行符 \</p><blockquote><p>折行符是告诉解释执行器，下一行的语句也是此语句的内容</p></blockquote><p>隐式换行：</p><blockquote><p>所有的括号里内容换行时，解释执行器会自动去下一行找到对应的括号，<br>直到找到为止，称作隐式换行</p></blockquote><h2 id="基本输入输出函数："><a href="#基本输入输出函数：" class="headerlink" title="基本输入输出函数："></a>基本输入输出函数：</h2><p>输入函数：input</p><p>作用：</p><blockquote><p>从标准输入设备上读取一个字符串</p><p>a = int(input())</p><p> (注：末尾换行符会被删除)</p></blockquote><p>格式：</p><blockquote><p>input（’提示字符串’）</p><p>注：返回一个字符串，提示字符串可以为空z<br>输出函数 print()</p></blockquote><p>作用：</p><blockquote><p>将一系列的值以字符的形式输出到标准设备上，默认为终端</p></blockquote><p>格式：</p><blockquote><p>print(value, … ,sep=’ ’,end=’\n’)</p></blockquote><p>关键字参数说明：</p><blockquote><p>sep:两个值之间的分隔符，默认为一个空格’ ‘</p><p>end:输出完毕后在流末尾自动追加一个字符串，默认为换行符’\n’</p></blockquote><h2 id="if-语句"><a href="#if-语句" class="headerlink" title="if 语句"></a>if 语句</h2><p>作用：</p><blockquote><p>让程序根据条件选择性的执行某条语句或某些语句</p></blockquote><p>语法：</p><pre><code>If 真值表达式1：    语句块1…elif 真值表达式2：    语句块2…    …else:    语句块n…</code></pre>说明：> 1. 真值判断会自上而下进行，如果有一条为true则执行其中的语句块，然后结束if语句的执行，如果所有真值表达式都为False，则执行else子句里的语句> 2. elif子句可以有0个，1个或多个> 3. else子句可以有0个，或1个# DAY2## if语句的嵌套> if语句本身是由多条子句组成的一条复合语句> > if语句可以作为语句嵌套到另一个语句的内部练习：写一个程序，输入一个数，用if语句计算并打印这个数的绝对值注：不能用abs语句<pre><code>A = int(input('请输入一个数'))if A < 0:    print(-A)else:    print(A)</code></pre>****<pre><code>A = int(input('请输入一个数'))if A < 0:    A = -Aprint(A)</code></pre><h2 id="条件表达式"><a href="#条件表达式" class="headerlink" title="条件表达式"></a>条件表达式</h2><p>语法：</p><blockquote><p>表达式1   if真值表达式   else   表达式2</p></blockquote><p>作用：</p><blockquote><p>如果真值表达式的布尔值为True时，则执行表达式1，并返回结果对象的引用，否者表达式2，并返回对象引用。</p></blockquote><p>例子：</p><p>商场促销，满100减20</p><pre><code>money = int(input('请输入商品金额：'))pay = money - 20 if money >= 100 else moneyprint('您需要支付：',pay,'元')</code></pre><p>练习：输入一个数，用条件表达式计算并打印这个数的绝对值。</p><pre><code>n = int(input('请输入一个数：'))print(n if n > 0 else - n)</code></pre><h2 id="pass语句"><a href="#pass语句" class="headerlink" title="pass语句"></a>pass语句</h2><p>作用：通常用来填充语法空白</p><ul><li>def fun（）：</li><li>pass</li><li>fun ()</li></ul><p>布尔运算：</p><blockquote><p>运算符： not and or</p></blockquote><p>布尔非操作 not</p><p>not x</p><blockquote><p>作用：对X进行布尔非取值，如bool(x)为True则返回False，否则返回True</p></blockquote><p>布尔操作and</p><p>x and y</p><table><thead><tr><th style="text-align:center">表达式</th><th style="text-align:center">结果</th></tr></thead><tbody><tr><td style="text-align:center">True and True</td><td style="text-align:center"># True</td></tr><tr><td style="text-align:center">True and False</td><td style="text-align:center"># False</td></tr><tr><td style="text-align:center">False and False</td><td style="text-align:center"># False</td></tr><tr><td style="text-align:center">False and False</td><td style="text-align:center"># False</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if  1&lt;= x &lt;= 12:           #if 1&lt;= x and x &lt;= 12</span><br><span class="line">print(&quot;合法月份&quot;)</span><br></pre></td></tr></table></figure><p>布尔或运算 or</p><p>x or y # 等同于 x if bool(x)==True  else y</p><p>思考： S = input(‘请输入学生的成绩：’) or ‘0’</p><blockquote><ul><li>bool(‘’)</li><li>bool([])</li></ul></blockquote><h2 id="正负号运算符"><a href="#正负号运算符" class="headerlink" title="正负号运算符"></a>正负号运算符</h2><p>正负号运算符式一元运算符（只有一个元素参与）</p><blockquote><ul><li>a = 5</li><li>b = -a</li><li>d = (2 - 3j)</li><li>e = -d #(-2+3j)</li></ul></blockquote><hr><p>调用库</p><blockquote><ul><li>import math</li><li>math.pi</li><li>math.sqrt(81)</li></ul></blockquote><p>随机整数</p><blockquote><ul><li>import random</li><li>random.randint(0,100)</li><li>random,choice([1,2,3,9]) #从固定数组中抽取</li></ul></blockquote><pre><code>S = 'Spam'len(s)S[0]S[1]S[4]切片：S[1:3]S + 'xyz'=>Spamxyz</code></pre><p>L[ : : -1]</p><blockquote><p>#[起始：终止：步长]</p></blockquote><p>L.append(‘OK’)</p><blockquote><p>将ok添加到L表中</p></blockquote><p>L.pop(2)</p><blockquote><p>弹出表中相应位置元素 （）为空弹出最后一个</p></blockquote><p>M.sort</p><blockquote><p>对M表格排正序</p></blockquote><p>M.reverse（）</p><blockquote><p>对表格排倒序</p></blockquote><p>L[1] = L [:]</p><blockquote><p>L[:]是L的拷贝</p></blockquote><hr><h1 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h1><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环:"></a>for循环:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for .... in .....:</span><br><span class="line">语句块</span><br><span class="line">`</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">'zhang'</span>,<span class="string">'wang'</span>,<span class="string">'li'</span>]</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">print(name)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sum = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]:</span><br><span class="line">sum += x</span><br><span class="line">print(sum)</span><br></pre></td></tr></table></figure><h2 id="range-函数"><a href="#range-函数" class="headerlink" title="range()函数"></a>range()函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">range(<span class="number">10</span>)</span><br><span class="line">=&gt;range(0,10)</span><br><span class="line">list(range(<span class="number">10</span>))</span><br><span class="line">从零到九</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>,<span class="number">20</span>,<span class="number">2</span>):    <span class="comment">#起始，终止，步长</span></span><br><span class="line"><span class="keyword">print</span>（x）</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;<span class="string">'a'</span>:<span class="number">3</span>,<span class="string">'b'</span>:<span class="number">4</span>,<span class="string">'c'</span>:<span class="number">5</span>&#125;  <span class="comment">#字典</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> d:</span><br><span class="line">print(i)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> d.keys():     <span class="comment">#键</span></span><br><span class="line">print(i)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> d.valuse():  <span class="comment">#值</span></span><br><span class="line"><span class="keyword">print</span>（i）</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> k,v <span class="keyword">in</span> d.items():    <span class="comment">#同时迭代key和valuse</span></span><br><span class="line">print(k,v)</span><br></pre></td></tr></table></figure><h2 id="循环嵌套"><a href="#循环嵌套" class="headerlink" title="循环嵌套"></a>循环嵌套</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>,<span class="number">31</span>,<span class="number">10</span>):</span><br><span class="line">print(i)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">print(j)</span><br></pre></td></tr></table></figure><h2 id="while循环："><a href="#while循环：" class="headerlink" title="while循环："></a>while循环：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sum = <span class="number">0</span></span><br><span class="line">n = <span class="number">99</span> </span><br><span class="line"><span class="keyword">while</span> n &gt; <span class="number">0</span>:</span><br><span class="line">sum = sum - n</span><br><span class="line">n = n - <span class="number">2</span></span><br><span class="line">print(sum)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> n &lt; = <span class="number">100</span>:</span><br><span class="line"><span class="keyword">if</span> n &gt; <span class="number">10</span>:</span><br><span class="line"><span class="keyword">break</span>   <span class="comment"># break语句会终止循环</span></span><br><span class="line">print(n)</span><br><span class="line">n = n + <span class="number">1</span></span><br><span class="line">print(<span class="string">'end'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> n &lt; <span class="number">10</span> :</span><br><span class="line">n = n + <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> n % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">continue</span>   <span class="comment">#跳过本次循环，继续执行下一次循环</span></span><br><span class="line">print(n)</span><br></pre></td></tr></table></figure><h2 id="用循环生成列表"><a href="#用循环生成列表" class="headerlink" title="用循环生成列表"></a>用循环生成列表</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">L = []</span><br><span class="line">n = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> n &lt;= <span class="number">29</span>:</span><br><span class="line">L.append(n)</span><br><span class="line">n = n + <span class="number">2</span></span><br><span class="line">print(L)</span><br></pre></td></tr></table></figure><p>列表解析：（列表推导式，列表生成式）<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">J = [x*<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>,<span class="number">2</span>)]</span><br><span class="line">print(J)</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">N = [[1,2,3],[4,5,6],[7,8,9]]</span><br><span class="line">col2 = [row[1] + 10 for row in N]</span><br><span class="line">print(col2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">col2 = [row[1] + 10 for row in N if row[1] % 2 == 0]</span><br><span class="line">print(col2)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">doubles = [c *<span class="number">2</span> <span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">'spam'</span>]</span><br><span class="line">print(doubles)</span><br></pre></td></tr></table></figure><hr><blockquote><p>案例：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">y = int(input(<span class="string">'please input a mnumber:'</span>))</span><br><span class="line">x = y // <span class="number">2</span></span><br><span class="line"><span class="keyword">while</span> x &gt; <span class="number">1</span>:</span><br><span class="line"><span class="keyword">if</span> y % x == <span class="number">0</span>:</span><br><span class="line">print(y,<span class="string">'has factor'</span>,x)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">x -= <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:      <span class="comment">#当循环正常终止时（非break），执行else语句块</span></span><br><span class="line">print(y,<span class="string">'is prime'</span>)</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>求出100以内所有质数，用for循环来写</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">end = int(input(<span class="string">'输入数:'</span>))</span><br><span class="line">zhishu = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">2</span>,end + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> range(<span class="number">2</span> , n):</span><br><span class="line">        <span class="keyword">if</span> n % m == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        zhishu.append(n)</span><br><span class="line">print(<span class="string">'计算结果是：'</span>)</span><br><span class="line">print(zhishu)</span><br></pre></td></tr></table></figure><blockquote><p>优化<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">end = int(input(<span class="string">'输入数:'</span>))</span><br><span class="line">zhishu = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">2</span>,end + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> range(<span class="number">2</span> , n):</span><br><span class="line">        <span class="keyword">if</span> m ** <span class="number">2</span> &gt; n:</span><br><span class="line">            zhishu.append(n)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> n % m == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        zhishu.append(n)</span><br><span class="line">print(<span class="string">'计算结果是：'</span>)</span><br><span class="line">print(zhishu)</span><br></pre></td></tr></table></figure></p></blockquote><h1 id="DAY3"><a href="#DAY3" class="headerlink" title="DAY3"></a>DAY3</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">N = [[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]]</span><br><span class="line">M = [x[y] <span class="keyword">for</span> x <span class="keyword">in</span> N <span class="keyword">for</span> y <span class="keyword">in</span> range(<span class="number">3</span>)]</span><br><span class="line">print(M)</span><br></pre></td></tr></table></figure><p>列表推到式求出100以内质数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[x <span class="keyword">for</span> x <span class="keyword">in</span> range (<span class="number">2</span>,<span class="number">101</span>) <span class="keyword">if</span> <span class="keyword">True</span>]</span><br><span class="line">[x <span class="keyword">for</span> x <span class="keyword">in</span> range (<span class="number">2</span>,<span class="number">101</span>) <span class="keyword">if</span> [y <span class="keyword">for</span> y <span class="keyword">in</span> range (<span class="number">2</span>,x) <span class="keyword">if</span> x % y != <span class="number">0</span>]]   <span class="comment">#错，不充分</span></span><br><span class="line">[x <span class="keyword">for</span> x <span class="keyword">in</span> range (<span class="number">2</span>,<span class="number">101</span>) <span class="keyword">if</span> <span class="keyword">not</span> Flase]</span><br><span class="line">[x <span class="keyword">for</span> x <span class="keyword">in</span> range (<span class="number">2</span>,<span class="number">101</span>) <span class="keyword">if</span> <span class="keyword">not</span> [y <span class="keyword">for</span> y <span class="keyword">in</span> range (<span class="number">2</span>,x) <span class="keyword">if</span> x % y == <span class="number">0</span>]]</span><br></pre></td></tr></table></figure></p><p>假如有一个列表中有很多数据，里面有重复的数据，例如：L：[9,8,7,6,5,4,3,2,1….]打印出列表中的数据，要求重复的只打印一次，打印的顺序一列表中第一次出现的循序为准。例如上述打印：[9,8,7,6,5,4….]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">L = [<span class="number">9</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">9</span>]</span><br><span class="line">result = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> L[:]:</span><br><span class="line"><span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> result:      <span class="comment"># not</span></span><br><span class="line">resust.append(x)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><h2 id="斐波那契数列："><a href="#斐波那契数列：" class="headerlink" title="斐波那契数列："></a>斐波那契数列：</h2><p>1,1,2,3,5,8,13,21,34,…..<br>求前40个数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">fibs = [<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> len(fibs) &lt; <span class="number">40</span>:</span><br><span class="line">f = a + b</span><br><span class="line">a = b</span><br><span class="line">b = f</span><br><span class="line">fibs.appeds(f)</span><br><span class="line">print(fibs)</span><br></pre></td></tr></table></figure></p><p>法2 ：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fibs = [<span class="number">1</span>,<span class="number">1</span>]</span><br><span class="line"><span class="keyword">while</span> len(fibs) &lt; <span class="number">40</span> :</span><br><span class="line">fibs.append(fibs[<span class="number">-2</span>] + fibs[<span class="number">-1</span>])</span><br><span class="line">print(fibs)</span><br></pre></td></tr></table></figure></p><blockquote><p>练习：编写程序，计算并打印数列前20项之和：<br>2/1,3/2,5/3,8/5,13/8,21/13 …<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fibs = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">s = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">20</span>):                     <span class="comment">#range(20) -&gt; range(0,20)</span></span><br><span class="line">s.append(fibs[<span class="number">-1</span>]/fibs[<span class="number">-2</span>])</span><br><span class="line">fibs.append(fibs[<span class="number">-2</span>] + fibs[<span class="number">-1</span>])</span><br><span class="line">print(sum(s))</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="函数-1"><a href="#函数-1" class="headerlink" title="函数"></a>函数</h2><h3 id="函数的语法："><a href="#函数的语法：" class="headerlink" title="函数的语法："></a>函数的语法：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">def 函数名(参数列表)：</span><br><span class="line">“函数文档字符串”</span><br><span class="line">函数语句块</span><br></pre></td></tr></table></figure><h3 id="函数的作用："><a href="#函数的作用：" class="headerlink" title="函数的作用："></a>函数的作用：</h3><ul><li>定义用户的函数</li><li>函数是可以重复执行的代码块，可以重复使用</li><li>函数的名字就是代码块的名字</li><li>函数的名字是一个变量(不要轻易对其赋值)</li><li>函数有自己的命名空间，不要让函数处理的外部的数据需要使用参数传入</li></ul><h3 id="函数的调用"><a href="#函数的调用" class="headerlink" title="函数的调用"></a>函数的调用</h3><pre><code>函数名(实际参数)</code></pre><h4 id="return-语句"><a href="#return-语句" class="headerlink" title="return 语句"></a>return 语句</h4><p>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">return 表达</span><br><span class="line">或</span><br><span class="line">return             #默认 return None</span><br></pre></td></tr></table></figure></p><p>作用：</p><blockquote><p>结束当前函数的执行，返回到调用函数的地方，同时返回一个值对象的引用</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mymax</span><span class="params">(a1, a2)</span>:</span></span><br><span class="line">m = a1</span><br><span class="line"><span class="keyword">if</span> a2 &gt; m:</span><br><span class="line">m = a2</span><br><span class="line"><span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line">x = <span class="number">100</span></span><br><span class="line">y = <span class="number">200</span></span><br><span class="line">print(mymax(x,y))</span><br></pre></td></tr></table></figure><h4 id="位置参数"><a href="#位置参数" class="headerlink" title="位置参数"></a>位置参数</h4><blockquote><p>实际参数的对应关系与形式参数的对应关系是以位置来一次对应的</p></blockquote><p>说明：位置参数，形式参数的个数必须与实际参数的个数相同</p><p>练习：写出一个求最小值的函数，包含三个参数，返回最小值<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mymin</span> <span class="params">(x,y,z)</span>:</span></span><br><span class="line"><span class="keyword">if</span> x &lt; y:</span><br><span class="line">min = x</span><br><span class="line"><span class="keyword">if</span> min &gt; z:</span><br><span class="line">min = z</span><br><span class="line"><span class="keyword">return</span> min</span><br><span class="line">x = int(input(<span class="string">'please input x:'</span>))</span><br><span class="line">y = int(input(<span class="string">'please input y:'</span>))</span><br><span class="line">z = int(input(<span class="string">'please input z:'</span>))</span><br><span class="line">print(mymin(x,y,z))</span><br></pre></td></tr></table></figure></p><p>写一个函数isprime(x)判断x是否为质数，如果为质数，返回True，否者返回Flase<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isprime</span><span class="params">(x)</span>:</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>,x + <span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> i ** <span class="number">2</span> &gt; x:</span><br><span class="line"><span class="keyword">return</span> Ture</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> n % i == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">False</span>             <span class="comment">#防止负数</span></span><br><span class="line">x = int(input(<span class="string">'please input x:'</span>))</span><br><span class="line">print(isprime(x))</span><br></pre></td></tr></table></figure></p><p>写一个函数prime_m2n(m,n)，返回从m开始，到n结束范围内的质数，并返回这些质数列表，并打印：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">prime_m2n</span><span class="params">(m,n)</span>:</span></span><br><span class="line">prime_num = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(m,n+<span class="number">1</span>):</span><br><span class="line"><span class="keyword">if</span> isprime(i):</span><br><span class="line">prime_num.append(i)</span><br><span class="line"><span class="keyword">return</span> prime_num</span><br><span class="line"></span><br><span class="line">m = int(input(<span class="string">'please input m:'</span>))</span><br><span class="line">n = int(input(<span class="string">'please input n:'</span>))</span><br><span class="line">print(prime_m2n(m,n))</span><br></pre></td></tr></table></figure></p><p>练习：利用切片操作实现一个 trim()函数，去除字符串首尾的空格，注意不要调用str的strip()的方法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trim</span><span class="params">(s)</span>:</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s[:]:</span><br><span class="line"><span class="keyword">if</span> i == <span class="string">' '</span>:</span><br><span class="line">s = s[<span class="number">1</span>:]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s[::<span class="number">-1</span>]:</span><br><span class="line"><span class="keyword">if</span> i == <span class="string">' '</span>:</span><br><span class="line">s = s[:<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">retutn s</span><br><span class="line">a = <span class="string">'    hello  word    '</span></span><br><span class="line">print(trim(a))</span><br><span class="line"><span class="keyword">if</span> trim(a) == <span class="string">'hello word'</span>:</span><br><span class="line">print(<span class="string">'测试成功'</span>)</span><br></pre></td></tr></table></figure></p><hr><h1 id="面向对象编程（oop）"><a href="#面向对象编程（oop）" class="headerlink" title="面向对象编程（oop）"></a>面向对象编程（oop）</h1><ul><li>oop 是为了代码重用</li><li>可以用一个类来产生多个实例对象</li><li>什么是面向对象：一切皆对象，对象和对象之间有关联关系</li></ul><ul><li>图纸 -&gt; 类class</li><li>具体的某辆车 -&gt; 对象(object)/实例(insyance)</li><li>人(类) -&gt; 张三(实例对象)  #想要创建实例对象，先要创建类</li></ul><h2 id="类的创建语法："><a href="#类的创建语法：" class="headerlink" title="类的创建语法："></a>类的创建语法：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[@类装饰器]</span><br><span class="line">class 类名(继承列表)：</span><br><span class="line">“类文件字符串”</span><br><span class="line">实例方法 （内类的函数方法叫method）定义</span><br><span class="line">类变量定义</span><br></pre></td></tr></table></figure><p>最简单的类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">class DOg:</span><br><span class="line">pass</span><br></pre></td></tr></table></figure></p><h2 id="类的作用："><a href="#类的作用：" class="headerlink" title="类的作用："></a>类的作用：</h2><ol><li>定义一个类，可以用来创建实例对象</li><li>类内定义的变量和方法能被比此类所创建的实例所共同拥有</li><li><p>类通常用来创建具有共同属性的对象</p><p> （如果只是创建了一个对象，用模块就可以，不必用类）</p></li></ol><h2 id="实例创建表达式："><a href="#实例创建表达式：" class="headerlink" title="实例创建表达式："></a>实例创建表达式：</h2><blockquote><p>实例名 = 类名(创建传参)</p></blockquote><p>作用：</p><blockquote><p>创建一个类的实例对象并返回此实例</p></blockquote><p>实例说明：</p><ol><li>实例有自己的作用域和名字空间，可以为该实例添加变量(实例变量/实例属性)</li><li>实例可以调用类的方法</li><li>实例可以间接的访问类中的变量</li></ol><h2 id="实例变量的调用语法："><a href="#实例变量的调用语法：" class="headerlink" title="实例变量的调用语法："></a>实例变量的调用语法：</h2><blockquote><p>实例.变量名</p></blockquote><h2 id="点在模块中的用法："><a href="#点在模块中的用法：" class="headerlink" title="点在模块中的用法："></a>点在模块中的用法：</h2><ul><li>模块.变量名</li><li>模块.函数名</li><li>模块.类名</li></ul><h2 id="实例变量的赋值规则："><a href="#实例变量的赋值规则：" class="headerlink" title="实例变量的赋值规则："></a>实例变量的赋值规则：</h2><ol><li>首次赋值则创建实例变量</li><li>再次赋值则改变实例变量的绑定关系</li></ol><h2 id="实例的方法："><a href="#实例的方法：" class="headerlink" title="实例的方法："></a>实例的方法：</h2><p>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">class 类名（传承列表）:</span><br><span class="line">def 实例方法名(self,参数1，参数2...):</span><br><span class="line">&quot;文档字符串&quot;</span><br><span class="line">语句块</span><br><span class="line">(self是指实例自己)</span><br></pre></td></tr></table></figure></p><h2 id="实例方法的调用语法："><a href="#实例方法的调用语法：" class="headerlink" title="实例方法的调用语法："></a>实例方法的调用语法：</h2><ul><li>实例.实例方法名(调用参数)        #常用方法</li></ul><p>或</p><ul><li>类名.实例方法名(实例，调用参数)</li></ul><p>说明:</p><ol><li>实例方法的实质就是函数，是定义在类内的函数</li><li>实例方法属于类属性</li><li>实例方法的第一个参数代表调用这个方法的实例，一般命名为‘self‘</li><li>实例方法如果没有 return 语句，则返回 none<blockquote><p>例子：dog.py</p></blockquote></li></ol><hr><p>#DAY4</p><h2 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法:"></a>构造方法:</h2><h3 id="作用："><a href="#作用：" class="headerlink" title="作用："></a>作用：</h3><blockquote><p>创建对象时初始化实例变量:</p><p>(建立给每个对象传参共同方式，及初始化对象的属性)</p></blockquote><h3 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h3><blockquote><p>def <strong>inint</strong> (self [,参数列表]):</p><pre><code>语句块</code></pre></blockquote><p>说明：</p><blockquote><ul><li>构造方法必须为<strong>int</strong>,不可改变</li><li>在一个类中只能有一个<em>int</em>构造方法（有多个时，最后一个起作用）</li><li>构造方法会在实例生成式自动调用，且将实例自身通过第一个参数self 传入 <strong>int</strong>方法</li><li>构造方法如果没有return语句，则返回self本身。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">car</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span> <span class="params">(self, color, brand, model)</span>:</span></span><br><span class="line">        self.brand = brand</span><br><span class="line">        self.model = model</span><br><span class="line">        self.color = color</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self, speed)</span>:</span></span><br><span class="line">        print(self.color, self.brand, self.model,\</span><br><span class="line">            <span class="string">'正在以'</span>, speed, <span class="string">'KM/h速度行驶'</span>)</span><br><span class="line">        t = (self.color, self.brand, self.model, speed)</span><br><span class="line">        fmt = <span class="string">'%s%s%s正在以%dkm/h行驶'</span> %t    <span class="comment">#格式化字符串</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">change_color</span><span class="params">(self, c)</span>:</span></span><br><span class="line">        self.color = c</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">infos</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'车辆信息为：'</span>, self.brand, self.model, self.color)</span><br><span class="line"></span><br><span class="line">a4 = car(<span class="string">'红色'</span>,<span class="string">'奥迪'</span>,<span class="string">'A4'</span>)</span><br><span class="line">a4.run(<span class="number">199</span>)</span><br><span class="line">a4.change_color(<span class="string">'黑色'</span>)</span><br><span class="line">a4.run(<span class="number">230</span>)</span><br><span class="line">a4.infos()</span><br><span class="line">print(a4.color)</span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote><p>在oop程序设计当中，当我们定义一个class时侯，可以从某个现有的class类继承，新的class称为子类（subclass），而被继承的class称为基类，父类或超类（Base class,Supper class）.子类可以继承父类的方法</p></blockquote><h3 id="比如：我们已经编写了一个名为Animal的class、有一个run（）的方法可以直接打印："><a href="#比如：我们已经编写了一个名为Animal的class、有一个run（）的方法可以直接打印：" class="headerlink" title="比如：我们已经编写了一个名为Animal的class、有一个run（）的方法可以直接打印："></a>比如：我们已经编写了一个名为Animal的class、有一个run（）的方法可以直接打印：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span><span class="params">(object)</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">print(<span class="string">'Animal is running'</span>)</span><br><span class="line">a = Animal()</span><br><span class="line">a.run</span><br></pre></td></tr></table></figure><h3 id="当我们需要编写Dog类和Cat类时，就可以之接从Animsl类继承"><a href="#当我们需要编写Dog类和Cat类时，就可以之接从Animsl类继承" class="headerlink" title="当我们需要编写Dog类和Cat类时，就可以之接从Animsl类继承"></a>当我们需要编写Dog类和Cat类时，就可以之接从Animsl类继承</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span><span class="params">(Animal)</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">print(<span class="string">'Dog is running....'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Cat</span><span class="params">(self)</span>:</span></span><br><span class="line">print(<span class="string">'Eating meat....'</span>)</span><br><span class="line"></span><br><span class="line">Class Cat(Animal):</span><br><span class="line">pss</span><br></pre></td></tr></table></figure><p>对于Dog类来说，Animal就是父类，对于Animal来说，Dog就是他是子类。Cat类和Dog类同理。</p><h3 id="继承有什么好处？"><a href="#继承有什么好处？" class="headerlink" title="继承有什么好处？"></a>继承有什么好处？</h3><p>做大的好处就是子类获得了父类的全部功能。由于Animal实现了run()方法，因此，Dog和Cat作为他的子类，即使没什么事干，它自动拥有了run()的方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Dog = Dog()</span><br><span class="line">dog.run()</span><br><span class="line"></span><br><span class="line">cat = Cat()</span><br><span class="line">cat.run()</span><br></pre></td></tr></table></figure><p>当子类和父类都在相同的run()方法时，我们说，子类的run()覆盖了父类的run(),在代码运行的时候，总是会调用子类的run().这样，我们就获得了继承的另一个好处：多态。</p><p>在继承关系中，如果只是一个实例的数据类型是某个子类，呢么他的数据类型也可以被看作是父类<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">say</span><span class="params">(self, what)</span>:</span></span><br><span class="line">print(<span class="string">'say:'</span>, what)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self, speed)</span>:</span></span><br><span class="line">print(<span class="string">'run....'</span>, speed)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span><span class="params">(Human)</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">study</span><span class="params">(self, program)</span>:</span></span><br><span class="line">print(<span class="string">'learing'</span>, program)</span><br><span class="line"></span><br><span class="line">h1 = human()</span><br><span class="line">h1.run(<span class="number">5</span>)</span><br><span class="line">h1.say(<span class="string">'good weather!'</span>)</span><br><span class="line"></span><br><span class="line">s1 = Student()</span><br><span class="line">s1.run(<span class="number">10</span>)</span><br><span class="line">s1.say(<span class="string">'good'</span>, day)</span><br><span class="line">s1.study(<span class="string">'python'</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Teacher</span><span class="params">(human)</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">teach</span><span class="params">(self, language)</span>:</span></span><br><span class="line">print(<span class="string">'teaching'</span>, language)</span><br><span class="line"></span><br><span class="line">t1 = Teacher()</span><br><span class="line">t1.run(<span class="number">6</span>)</span><br><span class="line">t1.say(<span class="string">'home work is'</span>)</span><br><span class="line">t1.teach(<span class="string">'python'</span>)</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">class Bicycle:</span><br><span class="line">def Run(self, Km):</span><br><span class="line">print(&apos;自行车骑行了&apos;. km, &apos;公里&apos;)</span><br><span class="line"></span><br><span class="line">class EBicycle(Bicycle):</span><br><span class="line">def __init__ (self, vol):</span><br><span class="line">self.max_volume = vol</span><br><span class="line">self.cur_voume = vol</span><br><span class="line"></span><br><span class="line"># 每骑行10km消耗电量1度， 同时显示当前电量</span><br><span class="line">def Run (self, KM):</span><br><span class="line">v = min(KM/10,self.cur_volume) # min(), 求参数中最小值</span><br><span class="line">self.cur_volume -= v</span><br><span class="line">print(&apos;电动车骑行了%d km&apos; % (v*10))</span><br><span class="line">print(&apos;电动车剩余电量：&apos;， self.cur_volume)</span><br><span class="line"></span><br><span class="line">def fillcharge(self):</span><br><span class="line">print(&apos;正在充电&apos;)</span><br><span class="line">self，cur_volume = self.max_volume</span><br><span class="line"></span><br><span class="line">b = EBicycle(5)</span><br><span class="line">b.Run(10)</span><br><span class="line">b.Run(1000)</span><br><span class="line">b.fillcharge()</span><br></pre></td></tr></table></figure><h1 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h1><p>封装指隐藏类的实现细节，让使用者不关心这些细节</p><p>python的封装是假的（模拟的）封装</p><p>python以双下划线开头，不以下划线结尾的实例变量为类的私有变量，在子类中无法使用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">print(<span class="string">'A::__init__'</span>)</span><br><span class="line">self.__money = <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">makemoney</span><span class="params">(self,m)</span>:</span></span><br><span class="line">self.__money += m</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">moneys</span><span class="params">(self)</span>:</span></span><br><span class="line">print(self.__money)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span><span class="params">(Father)</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">super() .__init__()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_money</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="comment"># print(self.__money)</span></span><br><span class="line">print(self._Father__money)</span><br><span class="line"></span><br><span class="line">b = B()</span><br><span class="line">b.makemoney(<span class="number">2000</span>)</span><br><span class="line">b.moneys()</span><br><span class="line">b.show_money()</span><br></pre></td></tr></table></figure><h1 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h1><h3 id="什么是模块："><a href="#什么是模块：" class="headerlink" title="什么是模块："></a>什么是模块：</h3><pre><code>模块是一个包含1个或多个函数，变量，类等组成的程序组模块文件通常以.py结尾</code></pre><h3 id="模块的作用："><a href="#模块的作用：" class="headerlink" title="模块的作用："></a>模块的作用：</h3><pre><code>1.让一些相关的变量，函数，类等有逻辑的组织在一起2.让逻辑解构更加清晰3.模块中的函数和类等可提供给其他模块或程序使用</code></pre><h3 id="模块的分类："><a href="#模块的分类：" class="headerlink" title="模块的分类："></a>模块的分类：</h3><pre><code>1.内置模块（builtins）,在解析器内部可以直接使用2.标准库模块，python安装时已经标配3.第三方模块（通常为开源），需要自己安装4.用户自己编写的模块（也可以作为其他人的第三方模块）</code></pre><h3 id="为什么使用模块"><a href="#为什么使用模块" class="headerlink" title="为什么使用模块"></a>为什么使用模块</h3><pre><code>1.代码复用2.系统命名空间的划分(避免变量冲突)3.实现共享服务和共享数据（一个模块被多个函数或文件导入）</code></pre><h3 id="如何组织一个程序："><a href="#如何组织一个程序：" class="headerlink" title="如何组织一个程序："></a>如何组织一个程序：</h3><pre><code>1.一个python程序包含了多个含有python语句的文本文件。顶层文件和多个支持文件构成2.顶层文件（又被称脚本）包含了程序的主要控制流程（启动应用的文件）3.模块文件就是工具的库，顶层文件使用模块文件中定义的工具，而这些模块使用了其他模块所定义的工具4.在python中，一个文件导入了一个模块来获得这个模块定义的工具的访问权，这些工具被认作是这个模块的属性。</code></pre><h3 id="模块的导入"><a href="#模块的导入" class="headerlink" title="模块的导入:"></a>模块的导入:</h3><blockquote><p>import 模块名1 [as 模块新名1][, 模块名2]</p><p>import 模块名</p><p>import 模块名 as 新名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import math</span><br><span class="line">print(math.sqrt(9))</span><br><span class="line"></span><br><span class="line">math = 2.7   ####不要用模块当变量名</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import math as m</span><br><span class="line">print(m.factorial(5))   ##阶乘</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">from 模块名 import 模块属性 as 新名</span><br><span class="line">(这种方法导入后，可直接使用模块中的属性，不需要再写模块名)</span><br><span class="line"></span><br><span class="line">from 模块名 import *</span><br><span class="line"></span><br><span class="line">from math import factorial as fac</span><br><span class="line">print(fac(5))</span><br><span class="line"></span><br><span class="line">from math import pi</span><br><span class="line">print(pi)</span><br><span class="line">print(sin(pi/2))</span><br><span class="line"></span><br><span class="line">from math import *</span><br></pre></td></tr></table></figure><h4 id="数学模块-math"><a href="#数学模块-math" class="headerlink" title="数学模块    math:"></a>数学模块    math:</h4><h5 id="变量："><a href="#变量：" class="headerlink" title="变量："></a>变量：</h5><table><thead><tr><th>变量</th><th>含义</th></tr></thead><tbody><tr><td>math.e</td><td>自然对数</td></tr><tr><td>math.pi</td><td>圆周率</td></tr></tbody></table><h5 id="函数："><a href="#函数：" class="headerlink" title="函数："></a>函数：</h5><table><thead><tr><th>函数</th><th>含义</th></tr></thead><tbody><tr><td>math.floor(x)</td><td>对x向下取整 x=1.2 返回1</td></tr><tr><td>math.ceil(x)</td><td>对x向上取整 x=1.2 返回2</td></tr><tr><td>math.sqrt(x)</td><td>返回x的平方根</td></tr><tr><td>math.factorial(x)</td><td>求x的阶乘</td></tr><tr><td>math.log(x[,base])</td><td>放回以base为底的对数，如果不给出base则以e为底</td></tr><tr><td>math.log10(x)</td><td>求10为底的对数</td></tr><tr><td>math.pow(x,y)</td><td>返回x**y</td></tr><tr><td>math.fabs(x)</td><td>返回浮点数x的绝对值</td></tr><tr><td>math.degress(x)</td><td>将弧度转换为角度</td></tr><tr><td>math.radians(x)</td><td>将角度转换为弧度</td></tr><tr><td>math.sin(x)</td><td>x正弦</td></tr><tr><td>math.cos(x)</td><td>x的余弦</td></tr><tr><td>math.tan(x)</td><td>x的正切</td></tr><tr><td>math.asin(x)</td><td>返回x的反正弦</td></tr><tr><td>math.acos(x)</td><td>返回x的反余弦</td></tr><tr><td>math.atan(x)</td><td>返回x的反正切</td></tr></tbody></table><h4 id="时间模块-time"><a href="#时间模块-time" class="headerlink" title="时间模块 time"></a>时间模块 time</h4><p>使用方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import time</span><br><span class="line">from time import *</span><br><span class="line">from time import sleep</span><br><span class="line"></span><br><span class="line">time.sleep(seconds)</span><br><span class="line"></span><br><span class="line">from time import *</span><br><span class="line">L = [1,2,3]</span><br><span class="line">for i in L:</span><br><span class="line">L.append(L)</span><br><span class="line">sleep(L)</span><br><span class="line">print(L)</span><br></pre></td></tr></table></figure></p><p>多次导入一个模块时，模块对应的.py文件不会多次执行</p><p>模块只执行一次,py程序</p><h4 id="模块路径的搜索顺序："><a href="#模块路径的搜索顺序：" class="headerlink" title="模块路径的搜索顺序："></a>模块路径的搜索顺序：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import  模块名  #去哪找这个模块</span><br><span class="line">1.搜索内置模块（用c语言写的内置在python程序中的模块，无法用路径找到）</span><br><span class="line">2.标准库路径（如：sys, os）</span><br><span class="line">3.sys.path提供的路径</span><br><span class="line">  sys.path是一个表，里面放的都是模块搜索路径</span><br><span class="line">4.搜索程序运行的路径（当前路径）</span><br></pre></td></tr></table></figure><ul><li>import dir.dir2..mod            (dir0\dir1\dir2\mod,py)</li></ul><ol><li>dir1和dir2中必须都含有一个<strong>init</strong>.py文件</li><li>dir0是容器，不需要<strong>init</strong>.py文件，如果有的话，这个文件会被忽略</li><li>dir0必须列在模块的搜索路径上（也就是此目录必须为主目录，或者在PYTHONPATH中）</li></ol><ul><li><strong>init</strong>.py可以包含python程序代码（比如print语句），也可以完全是空的。作为一个高级功能，可以在<strong>init</strong>.py文件中使用<strong>all</strong>列表来定义目录，</li><li>当以from … import * 导入时，来定义需要导入什么。</li><li><strong>all</strong> = [‘super’,’tank’,’contra’]</li></ul><hr><p>某次战役中，为方便信息交互，我军侦察部门将此次的关键高地坐标设定为（x = 0,y = 0），并规定，没向东增加100米，x加1，向北增加100米，y加一，同时我军情报部门也破译了敌军向坦克发送的指挥信号，其中有三种信号（L,R,M）用于控制坦克运动，L和R分别表示向左、向右转向，M标识零坦克前进100米，其他信号如T时间同步，P用于位置校准（T，P不会控制坦克移动）</p><p>一日我军侦察兵发现了敌军的一辆坦克，侦察兵立即将坦克的坐标（P，Q）及坦克前进方向（W，E，N，S）发送给指挥部，同时启动信号接收器，将坦克接受的信号实时同步发往指挥部，指挥部用过信息计算出坦克位置，并击毁该坦克</p><ul><li>请设计程序计算出坦克所在位置。</li><li>（P=11，Q=39）      初始朝向：W</li><li><p>infor = ‘MTMPRPMTMLMRPMTPLMMTLMRRMP’</p></li><li><p>L = [1,2,3,4,5]</p></li><li>i = L.index(3)     # 查找索引</li><li>print（i）          #  2<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">direction = <span class="string">'W'</span></span><br><span class="line">p = <span class="number">11</span></span><br><span class="line">q = <span class="number">39</span></span><br><span class="line">infor = <span class="string">'MTMPRPMTMLMRPMTPLMMTLMRRMP'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cal_direction</span><span class="params">(turn)</span>:</span></span><br><span class="line">D = [<span class="string">'E'</span>, <span class="string">'S'</span>, <span class="string">'W'</span>, <span class="string">'N'</span>]</span><br><span class="line">i = D.index(direction)</span><br><span class="line"><span class="keyword">if</span> turn == <span class="string">'L'</span>:</span><br><span class="line">i = i - <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> turn == <span class="string">'R'</span>:</span><br><span class="line">i = i + <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> i == len(D):</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">return</span> D[i]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cal_move</span><span class="params">(p,q)</span>:</span></span><br><span class="line"><span class="keyword">if</span> direction == <span class="string">'E'</span>:</span><br><span class="line">p = p + <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> direction == <span class="string">'N'</span>:</span><br><span class="line">q = q + <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> direction == <span class="string">'W'</span>:</span><br><span class="line">p = p - <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> direction == <span class="string">'S'</span>:</span><br><span class="line">q = q - <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> p, q</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> infor</span><br><span class="line"><span class="keyword">if</span> i == <span class="string">'L'</span> <span class="keyword">or</span> i == <span class="string">'R'</span>:</span><br><span class="line">direction = cal_direction</span><br><span class="line"><span class="keyword">if</span> i == <span class="string">'M'</span>:</span><br><span class="line">p,q = cal_move(p,q)</span><br><span class="line"></span><br><span class="line">print((p,q),direction)</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="DAY5"><a href="#DAY5" class="headerlink" title="DAY5"></a>DAY5</h1><h2 id="飞机大战游戏"><a href="#飞机大战游戏" class="headerlink" title="飞机大战游戏"></a>飞机大战游戏</h2><h2 id="设计思路："><a href="#设计思路：" class="headerlink" title="设计思路："></a>设计思路：</h2><p>1.游戏中的几种对象？</p><ul><li>敌机    蜜蜂   子弹   战机</li></ul><p>2.考虑游戏有几种状态？</p><ul><li>开始   运行   游戏结束</li></ul><p>3.考虑敌机怎么移动？英雄机怎么移动？蜜蜂子弹怎么移动？</p><ul><li>敌机下降（y坐标+）</li><li>战机：随鼠标移动（鼠标在图片中心）</li><li>子弹：直线上升，从战机所在位置发出</li><li>蜜蜂：先向右下，到右边界之后转向左下</li></ul><h2 id="游戏组成："><a href="#游戏组成：" class="headerlink" title="游戏组成："></a>游戏组成：</h2><p>1.窗体  面板  子弹  敌机  战机  蜜蜂</p><p>2.自己的飞机和敌人的飞机</p><p>3.飞机动起来</p><p>4.互相打</p><h2 id="业务需求："><a href="#业务需求：" class="headerlink" title="业务需求："></a>业务需求：</h2><p>1.打死敌机+5分</p><p>2.打死蜜蜂：奖励生命值或双倍火力</p><p>3.战机和敌机碰撞后：生命-1</p><p>4.双倍火力：发一次子弹双倍火力子弹-2</p><h2 id="设计模型："><a href="#设计模型：" class="headerlink" title="设计模型："></a>设计模型：</h2><p>1.战机，敌机，蜜蜂，子弹，分数，生命值，都是矩形框</p><p>2.坐标：以矩形框的左上角为依据</p><hr><h2 id="让tkinter-GUI-程序启动和运行起来需要五个步骤"><a href="#让tkinter-GUI-程序启动和运行起来需要五个步骤" class="headerlink" title="让tkinter GUI 程序启动和运行起来需要五个步骤"></a>让tkinter GUI 程序启动和运行起来需要五个步骤</h2><p>1.导入tkinter模块</p><blockquote><p>import tkinter</p></blockquote><p>2.创建一个空白窗口对象，用于容纳整个GUI应用</p><p>3.在空白窗口对象上构建所有的GUI组件及功能</p><p>4.通过底层的应用代码将这些GUI组件间接起来</p><p>5.进入主事件循环</p><hr><h1 id="DAY3-1"><a href="#DAY3-1" class="headerlink" title="DAY3"></a>DAY3</h1><p>请写一段python代码实现删除一个list里面重复的元素<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">L = [1,2,2,7,3,5,7,5,3,2]</span><br><span class="line">print(list(set(L)))     # 因为集合是无序的</span><br></pre></td></tr></table></figure></p><p>不需使用set<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">L3 = []</span><br><span class="line">j = 0</span><br><span class="line"></span><br><span class="line">for i in L:</span><br><span class="line">if i not inL[:j]:</span><br><span class="line">L3.append(i)</span><br><span class="line">j = j + 1</span><br><span class="line"></span><br><span class="line">print(L3,&apos;L3&apos;)</span><br></pre></td></tr></table></figure></p><h2 id="python里如何拷贝一个对象？（赋值，浅拷贝，深拷贝的区别）"><a href="#python里如何拷贝一个对象？（赋值，浅拷贝，深拷贝的区别）" class="headerlink" title="python里如何拷贝一个对象？（赋值，浅拷贝，深拷贝的区别）"></a>python里如何拷贝一个对象？（赋值，浅拷贝，深拷贝的区别）</h2><ul><li>a = 3</li><li>b = a</li></ul><h2 id="浅拷贝（copy）：拷贝父对象，不会拷贝对象内部的子对象"><a href="#浅拷贝（copy）：拷贝父对象，不会拷贝对象内部的子对象" class="headerlink" title="浅拷贝（copy）：拷贝父对象，不会拷贝对象内部的子对象"></a>浅拷贝（copy）：拷贝父对象，不会拷贝对象内部的子对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>:[,<span class="number">2</span>,<span class="number">3</span>]&#125;</span><br><span class="line">b = a.cpopy()</span><br><span class="line">print(b)</span><br><span class="line">a[<span class="number">1</span>].append(<span class="number">4</span>)</span><br><span class="line">print(a)</span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure><h2 id="深拷贝（deecopy）-copy模块的deepcopy方法，完全拷贝了父对象及其子对象"><a href="#深拷贝（deecopy）-copy模块的deepcopy方法，完全拷贝了父对象及其子对象" class="headerlink" title="深拷贝（deecopy）:copy模块的deepcopy方法，完全拷贝了父对象及其子对象"></a>深拷贝（deecopy）:copy模块的deepcopy方法，完全拷贝了父对象及其子对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> copy</span><br><span class="line">c = copy.deepcopy(a)</span><br><span class="line">print(a,c)</span><br><span class="line">a[<span class="number">1</span>].append(<span class="number">5</span>)</span><br><span class="line">print(<span class="string">'a'</span>,a)</span><br><span class="line">print(<span class="string">'c'</span>,c)</span><br></pre></td></tr></table></figure><h2 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h2><h3 id="必须是有序的数列"><a href="#必须是有序的数列" class="headerlink" title="必须是有序的数列"></a>必须是有序的数列</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">L = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">12</span>,<span class="number">34</span>,<span class="number">89</span>,<span class="number">99</span>]</span><br><span class="line">guess = L[random.randint(<span class="number">0</span>,len(L)<span class="number">-1</span>)]       <span class="comment"># L[]</span></span><br><span class="line">print(guess)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dich</span><span class="params">(L)</span>:</span></span><br><span class="line">low = <span class="number">0</span></span><br><span class="line">heigh = len(L) - <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> low &lt;= heigh:</span><br><span class="line">mid = (low + heigh)//<span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> L[mid] == guess:</span><br><span class="line">print(<span class="string">'猜对了，是%s'</span> % L [mid])</span><br><span class="line"><span class="keyword">return</span> L[mid]</span><br><span class="line"><span class="keyword">if</span> L[mid] &lt; guess:</span><br><span class="line">print(<span class="string">'猜小了，%s'</span> % L [mid])</span><br><span class="line">low = mid + <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> L[mid] &gt; guess:</span><br><span class="line">print(<span class="string">'猜大了，%s'</span> % L [mid])</span><br><span class="line">heigh = mid - <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="快速排序：-递归"><a href="#快速排序：-递归" class="headerlink" title="快速排序：         #递归"></a>快速排序：         #递归</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">L = [<span class="number">5</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">1</span>]</span><br><span class="line">target = <span class="number">5</span></span><br><span class="line">[<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>]</span><br><span class="line">[<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>][<span class="number">5</span>][<span class="number">7</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>]</span><br><span class="line"></span><br><span class="line">L = [<span class="number">5</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">quickSort</span><span class="params">(L)</span></span></span><br><span class="line">if len(L) &lt;= 1:</span><br><span class="line"><span class="keyword">return</span> L</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">target = L[<span class="number">0</span>]</span><br><span class="line">smaller = [i <span class="keyword">for</span> i <span class="keyword">in</span> L[<span class="number">1</span>:] <span class="keyword">if</span> i &lt; target]</span><br><span class="line">bigger = [i <span class="keyword">for</span> i <span class="keyword">in</span> L[<span class="number">1</span>:] <span class="keyword">if</span> i &gt;= target]</span><br><span class="line"><span class="keyword">return</span> quickSort(smaller)+[target]+quickSort(bigger)</span><br><span class="line">print(quickSort(L))</span><br></pre></td></tr></table></figure><p>三张支票，100万，其中一张是真的，两张是假的。让你选一张，主持人会帮你从剩下的两张中，拿出一张，并告诉你这张是假的。此时，主持人会问你是否坚持原来的选择，还是更换选择。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">times = int(input(<span class="string">'请输入测试次数：'</span>))</span><br><span class="line">L = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess_ch</span><span class="params">()</span>:</span></span><br><span class="line">real = random.randint(<span class="number">0</span>,<span class="number">2</span>)</span><br><span class="line">L2 = L[:]</span><br><span class="line">choice_1 = random.randint(<span class="number">0</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> L2:</span><br><span class="line"><span class="keyword">if</span> i != real <span class="keyword">and</span> i != choise_1:</span><br><span class="line">L2.pop(L2.inde(i))</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> L2:</span><br><span class="line"><span class="keyword">if</span> i != choicd_1:</span><br><span class="line"><span class="keyword">if</span> i == real:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> Flase</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess_notch</span><span class="params">()</span>:</span></span><br><span class="line">real = random.randint(<span class="number">0</span>,<span class="number">2</span>)</span><br><span class="line">L2 = L[:]</span><br><span class="line">choice_1 = random.randint(<span class="number">0</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span> choice_1 == real:</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> Flase</span><br><span class="line">right_1 = <span class="number">0</span></span><br><span class="line">wrong_1 = <span class="number">0</span></span><br><span class="line">right_2 = <span class="number">0</span></span><br><span class="line">wrong_2 = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(time):</span><br><span class="line"><span class="keyword">if</span> guess_ch():</span><br><span class="line">right_1 += <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">wrong_1 += <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> guess_notch():</span><br><span class="line">right_2 += <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">wrong_2 += <span class="number">1</span></span><br><span class="line">print(<span class="string">'更改选择：'</span>)</span><br><span class="line">print(<span class="string">'猜正确的次数为%d次'</span>% right_1)</span><br><span class="line">print(<span class="string">'正确率：'</span>,right_1/times)</span><br><span class="line">print(<span class="string">'不更改选择：'</span>)</span><br><span class="line">print(<span class="string">'猜正确的次数为%d次'</span>% right_2)</span><br><span class="line">print(<span class="string">'正确率：'</span>,right_2/times)</span><br></pre></td></tr></table></figure></p><p>小白鼠</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random </span><br><span class="line"></span><br><span class="line">poison_bottle = random.randint(<span class="number">1</span>,<span class="number">1000</span>)</span><br><span class="line">find_bottle = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">M = &#123;x:[] <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>)&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">1001</span>):</span><br><span class="line">i2 = i</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">dp = i % <span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> dp == <span class="number">1</span>:</span><br><span class="line">M[j].append(i2)</span><br><span class="line">i -= dp</span><br><span class="line">i /= <span class="number">2</span></span><br><span class="line"></span><br><span class="line">find_bottle = <span class="number">0</span></span><br><span class="line">p_b = poison_bottle</span><br><span class="line">dead_mouse = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>)</span><br><span class="line">dp = p_b % <span class="number">2</span></span><br><span class="line"><span class="keyword">if</span>  dp == <span class="number">1</span>:</span><br><span class="line">dead_mouse.insert(<span class="number">0</span>,i)</span><br><span class="line">p_b -= dp</span><br><span class="line">p_b /= <span class="number">2</span></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> dead_mouse:</span><br><span class="line">find_bottle += <span class="number">2</span> ** (n<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">print(poison_bottle)</span><br><span class="line">print(find_bottle)</span><br><span class="line">print(dead_mouse)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006doHETly1fwq24e52h3j31hc0u0ag7.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="python学习" scheme="https://GodPang.github.io/categories/python%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="python" scheme="https://GodPang.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>纳新有感</title>
    <link href="https://GodPang.github.io/2018/09/20/%E7%BA%B3%E6%96%B0%E6%9C%89%E6%84%9F/"/>
    <id>https://GodPang.github.io/2018/09/20/纳新有感/</id>
    <published>2018-09-20T14:54:24.000Z</published>
    <updated>2018-12-04T15:16:00.881Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwq2av07l9j32yo1o0n9h.jpg" alt=""><br><a id="more"></a></p><h2 id="随便写点"><a href="#随便写点" class="headerlink" title="随便写点"></a>随便写点</h2><p>纳新前一天，临时下发通知要去班级宣讲，匆匆准备。五个人，跟着社团部的副部跑了十几个班。<br>谁上去讲，这个问题，我是表明坚决态度不上的。</p><p>两年前的11.4号，我就变了性格，我喜欢把我扔到人群中没人注意的感觉，不希望被别人关注。我更适合当空气吧，我更喜欢我再电脑前学习新技术，社交的能力我好像渐渐褪化了，扯远了。</p><p>纳新的时候发现好多新生都是大佬，我虽然也感兴趣，但到了大学我才开始接触的。新生高中就开始接触了，有甚者在14岁就开始自学编程了.强啊，看样子我更得努力了。看样子协会还死不了QAQ。</p><p>贴张我宿舍环境的照片吧，测试一下刚学的在markdown里插入图片<br><img src="http://ww1.sinaimg.cn/large/006doHETly1fvge41kklwj33402bskjn.jpg" alt="宿舍"></p><h3 id="再随便记点笔记"><a href="#再随便记点笔记" class="headerlink" title="再随便记点笔记"></a>再随便记点笔记</h3><h4 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h4><blockquote><p>hexo s -g</p></blockquote><h4 id="新建一篇博客"><a href="#新建一篇博客" class="headerlink" title="新建一篇博客"></a>新建一篇博客</h4><blockquote><p>hexo new post “博客名”</p></blockquote><h4 id="部署文章"><a href="#部署文章" class="headerlink" title="部署文章"></a>部署文章</h4><blockquote><p>hexo d -g</p></blockquote><h4 id="可能需要安装扩展"><a href="#可能需要安装扩展" class="headerlink" title="可能需要安装扩展"></a>可能需要安装扩展</h4><blockquote><p>npm install hexo-deployer-git –save</p></blockquote><h4 id="一切在git里执行"><a href="#一切在git里执行" class="headerlink" title="一切在git里执行"></a>一切在git里执行</h4>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006doHETly1fwq2av07l9j32yo1o0n9h.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="杂货铺" scheme="https://GodPang.github.io/categories/%E6%9D%82%E8%B4%A7%E9%93%BA/"/>
    
    
      <category term="随笔" scheme="https://GodPang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>这是测试用的一篇文章</title>
    <link href="https://GodPang.github.io/2018/09/19/%E6%B5%8B%E8%AF%95%E7%94%A8/"/>
    <id>https://GodPang.github.io/2018/09/19/测试用/</id>
    <published>2018-09-19T09:51:20.000Z</published>
    <updated>2018-10-30T02:55:04.242Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwq28gxtn6j31hc0u04p7.jpg" alt=""><br><a id="more"></a></p><h1 id="这是测试用的文章"><a href="#这是测试用的文章" class="headerlink" title="这是测试用的文章"></a>这是测试用的文章</h1><h2 id="来段代码"><a href="#来段代码" class="headerlink" title="来段代码"></a>来段代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> a,b,c;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">c=a*b;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;c&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="再来个表格"><a href="#再来个表格" class="headerlink" title="再来个表格"></a>再来个表格</h2><table><thead><tr><th>对象类型</th><th>例子</th></tr></thead><tbody><tr><td>数字</td><td>12，1.2,1+2j</td></tr><tr><td>字符串</td><td>‘afds’，”fdsaf’dsf”</td></tr><tr><td>列表</td><td>[5,3,2,1],[1,[2,’three’],4]</td></tr><tr><td>字典</td><td>{‘food’:’spam’,’taste’:’yum’}</td></tr><tr><td>元组</td><td>(1,’spam’,4,’U’)</td></tr><tr><td>集·合</td><td>set(‘abc’),{‘a’,’b’,’c’}</td></tr><tr><td>布尔型</td><td>True，False</td></tr><tr><td>None</td><td>None</td></tr><tr><td>首页</td><td>home</td></tr><tr><td>归档</td><td>archives</td></tr><tr><td>分类</td><td>categories</td></tr><tr><td>标签</td><td>tags</td></tr><tr><td>关于</td><td>about</td></tr></tbody></table><blockquote><p>222222222</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006doHETly1fwq28gxtn6j31hc0u04p7.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="杂货铺" scheme="https://GodPang.github.io/categories/%E6%9D%82%E8%B4%A7%E9%93%BA/"/>
    
    
      <category term="随笔" scheme="https://GodPang.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://GodPang.github.io/2018/09/19/hello-world/"/>
    <id>https://GodPang.github.io/2018/09/19/hello-world/</id>
    <published>2018-09-19T05:35:32.439Z</published>
    <updated>2018-10-30T02:53:56.278Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006doHETly1fwq28gxtn6j31hc0u04p7.jpg" alt=""><br><a id="more"></a><br>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006doHETly1fwq28gxtn6j31hc0u04p7.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
